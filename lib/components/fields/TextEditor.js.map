{"version":3,"file":"TextEditor.js","names":["_Field","_interopRequireDefault","require","_react","_interopRequireWildcard","_propTypes","_lib","_nested_property","_LaTeX","_RichText","_MultiFormat","_HTML","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","enterModule","reactHotLoaderGlobal","undefined","module","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","__signature__","signature","TEMPLATE_STRING_REGEX","INDEX_IN_TEMPLATE_STRING_REGEX","UnconnectedTextEditor","Component","hasTemplateStrings","match","updatePlot","props","templateStrings","adjustedValue","replace","index","exec","adjustedIndex","parseInt","isNaN","concat","emptyValue","getAdjustedFullValue","fullValue","render","attr","container","htmlOnly","latexOnly","multiValued","richTextOnly","localize","_","context","placeholder","nestedProperty","editor","createElement","onChange","bind","className","__reactstandin__regenerateByEval","key","code","eval","exports","propTypes","Field","PropTypes","any","bool","func","string","contextTypes","fullLayout","object","displayName","_default","connectToContainer","modifyPlotProps","plotProps","isVisible","_dfltTitle","values","includes","_default2","reactHotLoader","register","leaveModule"],"sources":["../../../src/components/fields/TextEditor.js"],"sourcesContent":["import Field from './Field';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connectToContainer} from 'lib';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport LaTeX from '../widgets/text_editors/LaTeX';\nimport RichText from '../widgets/text_editors/RichText';\nimport MultiFormat from '../widgets/text_editors/MultiFormat';\nimport HTML from '../widgets/text_editors/HTML';\n\n// TODO: import plotly.js regex directly: https://github.com/plotly/plotly.js/issues/3520\nconst TEMPLATE_STRING_REGEX = /%{([^\\s%{}:]*)(:[^}]*)?}/g;\nconst INDEX_IN_TEMPLATE_STRING_REGEX = /%{(meta(\\[(\\d+)]))}/;\n\nexport class UnconnectedTextEditor extends Component {\n  hasTemplateStrings(value) {\n    if (!value) {\n      return false;\n    }\n    return value.match(TEMPLATE_STRING_REGEX);\n  }\n\n  updatePlot(value) {\n    const {updatePlot} = this.props;\n    const templateStrings = this.hasTemplateStrings(value);\n\n    let adjustedValue = value;\n\n    if (templateStrings) {\n      adjustedValue = adjustedValue.replace(TEMPLATE_STRING_REGEX, (match) => {\n        const index = INDEX_IN_TEMPLATE_STRING_REGEX.exec(match);\n        if (index) {\n          const adjustedIndex = parseInt(index[3], 10) - 1;\n          if (!isNaN(adjustedIndex)) {\n            return `%{meta[${adjustedIndex < 0 ? 0 : adjustedIndex}]}`;\n          }\n        }\n        return match;\n      });\n    }\n\n    if (adjustedValue === '') {\n      adjustedValue = this.props.emptyValue;\n    }\n\n    updatePlot(adjustedValue);\n  }\n\n  getAdjustedFullValue(fullValue) {\n    const templateStrings = this.hasTemplateStrings(fullValue);\n    if (templateStrings) {\n      return fullValue.replace(TEMPLATE_STRING_REGEX, (match) => {\n        const index = INDEX_IN_TEMPLATE_STRING_REGEX.exec(match);\n        if (index) {\n          const adjustedIndex = parseInt(index[3], 10) + 1;\n          if (!isNaN(adjustedIndex)) {\n            return `%{meta[${adjustedIndex}]}`;\n          }\n          return match;\n        }\n        return match;\n      });\n    }\n    return fullValue;\n  }\n\n  render() {\n    const {attr, container, htmlOnly, latexOnly, multiValued, richTextOnly} = this.props;\n\n    const {localize: _} = this.context;\n\n    let fullValue = this.getAdjustedFullValue(this.props.fullValue);\n\n    let placeholder = this.props.placeholder;\n\n    if (multiValued || (fullValue && (!container || !nestedProperty(container, attr)))) {\n      placeholder = fullValue;\n      fullValue = '';\n    }\n\n    let editor;\n\n    if (latexOnly) {\n      placeholder = _('Enter LaTeX formatted text');\n      editor = (\n        <LaTeX value={fullValue} placeholder={placeholder} onChange={this.updatePlot.bind(this)} />\n      );\n    } else if (richTextOnly) {\n      editor = (\n        <RichText\n          value={fullValue}\n          emptyValue={this.props.emptyValue}\n          placeholder={placeholder}\n          onChange={this.updatePlot.bind(this)}\n        />\n      );\n    } else if (htmlOnly) {\n      placeholder = _('Enter html formatted text');\n      editor = (\n        <HTML value={fullValue} placeholder={placeholder} onChange={this.updatePlot.bind(this)} />\n      );\n    } else {\n      editor = (\n        <MultiFormat\n          value={fullValue}\n          emptyValue={this.props.emptyValue}\n          placeholder={placeholder}\n          onChange={this.updatePlot.bind(this)}\n        />\n      );\n    }\n\n    return (\n      <Field {...this.props}>\n        <div className=\"text-editor\">{editor}</div>\n      </Field>\n    );\n  }\n}\n\nUnconnectedTextEditor.propTypes = {\n  ...Field.propTypes,\n  fullValue: PropTypes.any,\n  emptyValue: PropTypes.any,\n  htmlOnly: PropTypes.bool,\n  latexOnly: PropTypes.bool,\n  richTextOnly: PropTypes.bool,\n  updatePlot: PropTypes.func,\n  placeholder: PropTypes.string,\n};\n\nUnconnectedTextEditor.contextTypes = {\n  localize: PropTypes.func,\n  fullLayout: PropTypes.object,\n};\n\nUnconnectedTextEditor.displayName = 'UnconnectedTextEditor';\n\nexport default connectToContainer(UnconnectedTextEditor, {\n  modifyPlotProps: (props, context, plotProps) => {\n    plotProps.emptyValue = null;\n    if (plotProps.isVisible && plotProps.multiValued) {\n      plotProps.isVisible = false;\n    }\n\n    if (\n      context.fullLayout &&\n      context.fullLayout._dfltTitle &&\n      Object.values(context.fullLayout._dfltTitle).includes(plotProps.fullValue)\n    ) {\n      plotProps.placeholder = plotProps.fullValue;\n      plotProps.fullValue = '';\n    }\n  },\n});\n"],"mappings":"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","ignoreList":[]}