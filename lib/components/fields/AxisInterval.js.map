{"version":3,"file":"AxisInterval.js","names":["_react","_interopRequireWildcard","require","_Field","_interopRequireDefault","_Dropdown","_NumericInput","_propTypes","_lib","_lib2","_dates","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","enterModule","reactHotLoaderGlobal","undefined","module","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","__signature__","signature","MILLISECONDS_IN_SECOND","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_DAY","DAYS_IN_MONTH","MONTHS_IN_YEAR","twoDecimalsRound","Math","round","getSmallestUnit","milliseconds","units","seconds","minutes","days","smallestUnit","unit","UnconnectedAxisInterval","Component","constructor","props","initialUnit","fullValue","parseInt","substring","state","update","adjustedValue","isValueInteger","updatePlot","onUnitChange","isFullValueMonthFormat","setState","includes","nbMonths","getDisplayValue","numericValue","render","_","context","localize","attrHead","attr","split","binStartValue","fullContainer","start","BinStartIsDate","isDateTime","isJSDate","tick0","colorbar","tick0IsDate","createElement","options","label","clearable","onChange","style","width","display","onUpdate","editableClassName","__reactstandin__regenerateByEval","key","code","eval","exports","contextTypes","PropTypes","func","propTypes","oneOfType","number","string","object","Field","_default","connectToContainer","_default2","reactHotLoader","register","leaveModule"],"sources":["../../../src/components/fields/AxisInterval.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Field from './Field';\nimport Dropdown from '../widgets/Dropdown';\nimport NumericInput from '../widgets/NumericInput';\nimport PropTypes from 'prop-types';\nimport {connectToContainer} from 'lib';\nimport {isDateTime} from 'plotly.js/src/lib';\nimport {isJSDate} from 'plotly.js/src/lib/dates';\n\nconst MILLISECONDS_IN_SECOND = 1000;\nconst MILLISECONDS_IN_MINUTE = MILLISECONDS_IN_SECOND * 60; // eslint-disable-line\nconst MILLISECONDS_IN_DAY = MILLISECONDS_IN_MINUTE * 60 * 24; // eslint-disable-line\nconst DAYS_IN_MONTH = 30;\nconst MONTHS_IN_YEAR = 12; //eslint-disable-line\n\nfunction twoDecimalsRound(value) {\n  return Math.round(value * 100) / 100;\n}\n\nfunction getSmallestUnit(milliseconds) {\n  const units = {\n    seconds: MILLISECONDS_IN_SECOND,\n    minutes: MILLISECONDS_IN_MINUTE,\n    days: MILLISECONDS_IN_DAY,\n  };\n\n  let smallestUnit = 'milliseconds';\n\n  ['seconds', 'minutes', 'days'].forEach((unit) => {\n    if (\n      milliseconds % units[unit] === 0 &&\n      (smallestUnit === 'milliseconds' ||\n        (smallestUnit !== 'milliseconds' &&\n          milliseconds / units[smallestUnit] > milliseconds / units[unit]))\n    ) {\n      smallestUnit = unit;\n    }\n  });\n\n  return smallestUnit;\n}\n\nexport class UnconnectedAxisInterval extends Component {\n  constructor(props) {\n    super(props);\n\n    const initialUnit =\n      props.fullValue && typeof props.fullValue === 'string' && props.fullValue[0] === 'M'\n        ? parseInt(props.fullValue.substring(1), 10) % MONTHS_IN_YEAR === 0\n          ? 'years'\n          : 'months'\n        : getSmallestUnit(props.fullValue);\n\n    this.state = {\n      units: initialUnit,\n    };\n  }\n\n  update(value) {\n    let adjustedValue = value < 0 ? 0 : value;\n    const isValueInteger = adjustedValue % 1 === 0;\n\n    if (this.state.units === 'years') {\n      if (isValueInteger) {\n        adjustedValue = 'M' + adjustedValue * MONTHS_IN_YEAR;\n      } else {\n        adjustedValue = adjustedValue * MONTHS_IN_YEAR * DAYS_IN_MONTH * MILLISECONDS_IN_DAY;\n      }\n    }\n\n    if (this.state.units === 'months') {\n      if (isValueInteger) {\n        adjustedValue = 'M' + adjustedValue;\n      } else {\n        adjustedValue = adjustedValue * DAYS_IN_MONTH * MILLISECONDS_IN_DAY;\n      }\n    }\n\n    if (this.state.units === 'days') {\n      adjustedValue = adjustedValue * MILLISECONDS_IN_DAY;\n    }\n\n    if (this.state.units === 'minutes') {\n      adjustedValue = adjustedValue * MILLISECONDS_IN_MINUTE;\n    }\n\n    if (this.state.units === 'seconds') {\n      adjustedValue = adjustedValue * MILLISECONDS_IN_SECOND;\n    }\n\n    this.props.updatePlot(adjustedValue);\n  }\n\n  onUnitChange(value) {\n    const isFullValueMonthFormat =\n      typeof this.props.fullValue === 'string' && this.props.fullValue[0] === 'M';\n\n    const milliseconds = isFullValueMonthFormat\n      ? parseInt(this.props.fullValue.substring(1), 10) * DAYS_IN_MONTH * MILLISECONDS_IN_DAY\n      : this.props.fullValue;\n\n    this.setState({units: value});\n\n    if (['years', 'months'].includes(value)) {\n      const nbMonths = milliseconds / MILLISECONDS_IN_DAY / DAYS_IN_MONTH;\n      if (nbMonths % 1 === 0) {\n        this.props.updatePlot('M' + nbMonths);\n      } else {\n        this.props.updatePlot(milliseconds);\n      }\n    } else {\n      this.props.updatePlot(milliseconds);\n    }\n  }\n\n  getDisplayValue(value) {\n    const numericValue =\n      typeof value === 'string' && value[0] === 'M' ? parseInt(value.substring(1), 10) : value;\n\n    if (this.state.units === 'years') {\n      if (typeof value === 'string') {\n        return twoDecimalsRound(numericValue / MONTHS_IN_YEAR);\n      }\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_DAY / DAYS_IN_MONTH / MONTHS_IN_YEAR);\n    }\n    if (this.state.units === 'months') {\n      if (typeof value === 'string') {\n        return twoDecimalsRound(numericValue);\n      }\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_DAY / DAYS_IN_MONTH);\n    }\n    if (this.state.units === 'days') {\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_DAY);\n    }\n    if (this.state.units === 'minutes') {\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_MINUTE);\n    }\n    if (this.state.units === 'seconds') {\n      return twoDecimalsRound(numericValue / MILLISECONDS_IN_SECOND);\n    }\n    if (this.state.units === 'milliseconds') {\n      return numericValue;\n    }\n    return null;\n  }\n\n  render() {\n    const _ = this.context.localize;\n    const attrHead = this.props.attr.split('.')[0];\n    const binStartValue = this.props.fullContainer[attrHead].start;\n    const BinStartIsDate =\n      typeof binStartValue === 'string' && (isDateTime(binStartValue) || isJSDate(binStartValue));\n    const tick0 =\n      this.props.fullContainer.tick0 &&\n      (this.props.fullContainer.tick0 || this.props.fullContainer.colorbar.tick0);\n    const tick0IsDate = tick0 && (isDateTime(tick0) || isJSDate(tick0));\n\n    return BinStartIsDate || tick0IsDate ? (\n      <Field {...this.props}>\n        <Dropdown\n          options={[\n            {value: 'years', label: _('Years')},\n            {value: 'months', label: _('Months')},\n            {value: 'days', label: _('Days')},\n            {value: 'minutes', label: _('Minutes')},\n            {value: 'seconds', label: _('Seconds')},\n            {value: 'milliseconds', label: _('Milliseconds')},\n          ]}\n          clearable={false}\n          onChange={(value) => this.onUnitChange(value)}\n          value={this.state.units}\n        />\n        <div style={{width: '100%', display: 'block'}}> </div>\n        <NumericInput\n          value={this.getDisplayValue(this.props.fullValue)}\n          onUpdate={(value) => this.update(value)}\n          editableClassName=\"AxisInterval-milliseconds\"\n        />\n      </Field>\n    ) : (\n      <Field {...this.props}>\n        <NumericInput\n          value={this.props.fullValue}\n          onUpdate={(value) => this.props.updatePlot(value)}\n        />\n      </Field>\n    );\n  }\n}\n\nUnconnectedAxisInterval.contextTypes = {\n  localize: PropTypes.func,\n};\n\nUnconnectedAxisInterval.propTypes = {\n  fullValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  updatePlot: PropTypes.func,\n  attr: PropTypes.string,\n  fullContainer: PropTypes.object,\n  ...Field.propTypes,\n};\n\nexport default connectToContainer(UnconnectedAxisInterval);\n"],"mappings":"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","ignoreList":[]}