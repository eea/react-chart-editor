{"version":3,"file":"TraceSelector-test.js","names":["_Dropdown","_interopRequireDefault","require","_react","_TraceSelector","_containers","_testUtils","_lib","e","__esModule","default","_extends","Object","assign","bind","n","arguments","length","t","r","hasOwnProperty","call","apply","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","__signature__","reactHotLoaderGlobal","signature","a","describe","TraceSection","connectTraceToPlot","PlotlySection","it","editorProps","fixtures","scatter","data","mode","xsrc","ysrc","onUpdate","jest","fn","wrapper","mount","createElement","TestEditor","plotly","traceIndexes","attr","find","TraceSelector","innerDropdown","Dropdown","expect","prop","toEqual","graphDiv","toBe","_fullData","fill","beforeUpdateTraces","type","payload","mock","calls","update","stackgroup"],"sources":["../../../../src/components/fields/__tests__/TraceSelector-test.js"],"sourcesContent":["/* eslint-disable no-magic-numbers */\nimport Dropdown from '../../widgets/Dropdown';\nimport React from 'react';\nimport TraceSelector from '../TraceSelector';\nimport {PlotlySection} from '../../containers';\nimport {TestEditor, fixtures, plotly, mount} from 'lib/test-utils';\nimport {connectTraceToPlot} from 'lib';\n\ndescribe('TraceSelector', () => {\n  const TraceSection = connectTraceToPlot(PlotlySection);\n\n  it('sets mode to markers if trace scatter, no data or mode provided', () => {\n    const editorProps = {\n      ...fixtures.scatter({data: [{mode: null, xsrc: null, ysrc: null}]}),\n      onUpdate: jest.fn(),\n    };\n\n    const wrapper = mount(\n      <TestEditor {...editorProps} plotly={plotly}>\n        <TraceSection traceIndexes={[0]}>\n          <TraceSelector attr=\"type\" />\n        </TraceSection>\n      </TestEditor>\n    ).find(TraceSelector);\n\n    const innerDropdown = wrapper.find(Dropdown);\n    expect(innerDropdown.prop('value')).toEqual('scatter');\n  });\n\n  it('if no data provided, but mode is provided, displays correct trace type', () => {\n    const editorProps = {\n      ...fixtures.scatter({\n        data: [{mode: 'lines+markers', xsrc: null, ysrc: null}],\n      }),\n      onUpdate: jest.fn(),\n    };\n    const wrapper = mount(\n      <TestEditor {...editorProps} plotly={plotly}>\n        <TraceSection traceIndexes={[0]}>\n          <TraceSelector attr=\"type\" />\n        </TraceSection>\n      </TestEditor>\n    ).find(TraceSelector);\n\n    const innerDropdown = wrapper.find(Dropdown);\n    expect(innerDropdown.prop('value')).toEqual('line');\n  });\n\n  it('if data provided, but no mode is provided, chooses mode according to fullData', () => {\n    const editorProps = {\n      ...fixtures.scatter(),\n      onUpdate: jest.fn(),\n    };\n\n    expect(!editorProps.graphDiv.data[0].mode).toBe(true);\n    expect(editorProps.graphDiv._fullData[0].mode).toBe('lines+markers');\n\n    const wrapper = mount(\n      <TestEditor {...editorProps} plotly={plotly}>\n        <TraceSection traceIndexes={[0]}>\n          <TraceSelector attr=\"type\" />\n        </TraceSection>\n      </TestEditor>\n    ).find(TraceSelector);\n\n    const innerDropdown = wrapper.find(Dropdown);\n    expect(innerDropdown.prop('value')).toEqual('line');\n  });\n\n  it('interprets scatter + fill as type=area', () => {\n    const editorProps = {\n      ...fixtures.scatter({data: [{fill: 'tonexty'}]}),\n      onUpdate: jest.fn(),\n    };\n    const wrapper = mount(\n      <TestEditor {...editorProps} plotly={plotly}>\n        <TraceSection traceIndexes={[0]}>\n          <TraceSelector attr=\"type\" />\n        </TraceSection>\n      </TestEditor>\n    ).find(TraceSelector);\n\n    const innerDropdown = wrapper.find(Dropdown);\n\n    expect(innerDropdown.prop('value')).toEqual('area');\n  });\n\n  it('interprets scatter + mode=lines as type=line', () => {\n    const editorProps = {\n      ...fixtures.scatter({data: [{mode: 'lines'}]}),\n      onUpdate: jest.fn(),\n    };\n    const wrapper = mount(\n      <TestEditor {...editorProps} plotly={plotly}>\n        <TraceSection traceIndexes={[0]}>\n          <TraceSelector attr=\"type\" />\n        </TraceSection>\n      </TestEditor>\n    ).find(TraceSelector);\n\n    const innerDropdown = wrapper.find(Dropdown);\n\n    expect(innerDropdown.prop('value')).toEqual('line');\n  });\n\n  it('interprets scatter + mode=lines+markers as type=line', () => {\n    const editorProps = {\n      ...fixtures.scatter({data: [{mode: 'lines+markers'}]}),\n      onUpdate: jest.fn(),\n    };\n    const wrapper = mount(\n      <TestEditor {...editorProps} plotly={plotly}>\n        <TraceSection traceIndexes={[0]}>\n          <TraceSelector attr=\"type\" />\n        </TraceSection>\n      </TestEditor>\n    ).find(TraceSelector);\n\n    const innerDropdown = wrapper.find(Dropdown);\n\n    expect(innerDropdown.prop('value')).toEqual('line');\n  });\n\n  it('updates type=scatter mode=lines when type=line', () => {\n    const beforeUpdateTraces = jest.fn();\n    const editorProps = {\n      ...fixtures.scatter({data: [{type: 'scatter', mode: 'markers'}]}),\n      beforeUpdateTraces,\n      plotly,\n    };\n    const wrapper = mount(\n      <TestEditor {...editorProps}>\n        <TraceSection traceIndexes={[0]}>\n          <TraceSelector attr=\"type\" />\n        </TraceSection>\n      </TestEditor>\n    ).find(TraceSelector);\n\n    const innerDropdown = wrapper.find(Dropdown);\n    innerDropdown.prop('onChange')('line');\n\n    const payload = beforeUpdateTraces.mock.calls[0][0];\n    expect(payload.update).toEqual({\n      stackgroup: null,\n      mode: 'lines',\n      type: 'scatter',\n    });\n  });\n\n  it('updates type=scatter stackgroup=1 when type=area', () => {\n    const beforeUpdateTraces = jest.fn();\n    const editorProps = {\n      ...fixtures.scatter({data: [{type: 'scatter', mode: 'markers'}]}),\n      beforeUpdateTraces,\n      plotly,\n    };\n    const wrapper = mount(\n      <TestEditor {...editorProps}>\n        <TraceSection traceIndexes={[0]}>\n          <TraceSelector attr=\"type\" />\n        </TraceSection>\n      </TestEditor>\n    ).find(TraceSelector);\n\n    const innerDropdown = wrapper.find(Dropdown);\n    innerDropdown.prop('onChange')('area');\n\n    const payload = beforeUpdateTraces.mock.calls[0][0];\n    expect(payload.update).toEqual({type: 'scatter', mode: 'lines', stackgroup: 1});\n  });\n});\n"],"mappings":"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","ignoreList":[]}