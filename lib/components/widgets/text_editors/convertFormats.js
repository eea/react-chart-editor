"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.laTeXToHTML=exports.isLaTeXExpr=exports.htmlToLaTeX=exports.hasTextExpression=void 0;(function(){var enterModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.enterModule:undefined;enterModule&&enterModule(module)})();var __signature__=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default.signature:function(a){return a};const getTextBlockRegExp=()=>/\\text\{([^}]*)}/g;const getLaTeXWrappedRegExp=()=>/^\$[\s\S]*\$$/;const stripHTMLTags=html=>html.replace(/<[^>]*>/g,"").trim();const extractTextBlocks=laTeX=>{let matchObj;let matchStr;const matches=[];const stringifiedLaTeX=JSON.stringify(laTeX);const regExp=getTextBlockRegExp();while((matchObj=regExp.exec(stringifiedLaTeX))!==null){matchStr=matchObj[1].trim().replace("\\n","");matches.push(matchStr)}return matches.join("<br>")};const wrapLaTeX=value=>value?"$".concat(value,"$"):"$$";const wrapText=value=>value?"\\text{".concat(value,"}"):"\\text{}";const isLaTeXExpr=value=>getLaTeXWrappedRegExp().test(value);exports.isLaTeXExpr=isLaTeXExpr;const hasTextExpression=laTeX=>{const regExp=getTextBlockRegExp();const stringifiedLaTeX=JSON.stringify(laTeX);return regExp.test(stringifiedLaTeX)};exports.hasTextExpression=hasTextExpression;const htmlToLaTeX=html=>{const breakTag="<br>";const trimmedHTML=html.trim();if(trimmedHTML===""){return wrapLaTeX(wrapText())}if(trimmedHTML.replace(breakTag,"")===""){return wrapLaTeX(wrapText())}return wrapLaTeX(trimmedHTML.split(breakTag).map(para=>para.length?wrapText(stripHTMLTags(para)):"").join("\n"))};exports.htmlToLaTeX=htmlToLaTeX;const laTeXToHTML=laTeX=>{const trimmedLaTeX=laTeX.trim();return extractTextBlocks(trimmedLaTeX)};exports.laTeXToHTML=laTeXToHTML;;(function(){var reactHotLoader=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default:undefined;if(!reactHotLoader){return}reactHotLoader.register(getTextBlockRegExp,"getTextBlockRegExp","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(getLaTeXWrappedRegExp,"getLaTeXWrappedRegExp","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(stripHTMLTags,"stripHTMLTags","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(extractTextBlocks,"extractTextBlocks","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(wrapLaTeX,"wrapLaTeX","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(wrapText,"wrapText","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(isLaTeXExpr,"isLaTeXExpr","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(hasTextExpression,"hasTextExpression","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(htmlToLaTeX,"htmlToLaTeX","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js");reactHotLoader.register(laTeXToHTML,"laTeXToHTML","/Users/razvan/Work/original-react-chart-editor/src/components/widgets/text_editors/convertFormats.js")})();;(function(){var leaveModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.leaveModule:undefined;leaveModule&&leaveModule(module)})();
//# sourceMappingURL=convertFormats.js.map