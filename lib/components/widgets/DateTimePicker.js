"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;require("react-day-picker/lib/style.css");var _plotlyIcons=require("plotly-icons");var _dates=require("plotly.js/src/lib/dates");var _reactDayPicker=_interopRequireDefault(require("react-day-picker"));var _propTypes=_interopRequireDefault(require("prop-types"));var _react=_interopRequireWildcard(require("react"));var _TextInput=_interopRequireDefault(require("./TextInput"));var _Dropdown=_interopRequireDefault(require("./Dropdown"));var _constants=require("../../lib/constants");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(function(){var enterModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.enterModule:undefined;enterModule&&enterModule(module)})();var __signature__=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default.signature:function(a){return a};var testDate="2000-01-01";var testTime="00:00";var datePlaceholder="yyyy-mm-dd";var timePlaceholder="hh:mm:ss.xxx";class DateTimePicker extends _react.Component{constructor(props,context){super(props,context);var _this$parsePlotlyJSDa=this.parsePlotlyJSDateTime(props.value),time=_this$parsePlotlyJSDa.time,date=_this$parsePlotlyJSDa.date;var isValidTime=(0,_dates.isDateTime)(testDate+" "+time)||["",timePlaceholder,_constants.MULTI_VALUED_PLACEHOLDER].includes(time);var isValidDate=(0,_dates.isDateTime)(date+" "+testTime)||["",datePlaceholder,_constants.MULTI_VALUED_PLACEHOLDER].includes(date);this.state={calendarOpen:false,dateInputClassName:isValidDate?"datetimepicker-container-date-input":"datetimepicker-container-date-input +error",timeInputClassName:isValidTime?"datetimepicker-container-time-input":"datetimepicker-container-time-input +error",timeValue:time,dateValue:date,AMPM:this.getAMPM(date,time,context.localize)};this.toPlotlyJSDate=this.toPlotlyJSDate.bind(this);this.onMonthChange=this.onMonthChange.bind(this);this.onYearChange=this.onYearChange.bind(this);this.onTimeChange=this.onTimeChange.bind(this);this.onDateChange=this.onDateChange.bind(this);this.onTimeUpdate=this.onTimeUpdate.bind(this);this.onDateUpdate=this.onDateUpdate.bind(this)}toPlotlyJSDate(value){var ms=(0,_dates.dateTime2ms)(value);return(0,_dates.ms2DateTime)(ms)}getYearOptions(current){var base=5;var yearAsNumber=parseInt(current,10);var lastFive=new Array(base).fill(0).map((year,index)=>{var newOption=yearAsNumber-(base-index);return{label:newOption,value:newOption}});var nextFive=new Array(base).fill(0).map((year,index)=>{var newOption=yearAsNumber+(index+1);return{label:newOption,value:newOption}});return lastFive.concat([{label:current,value:current}]).concat(nextFive)}getMonthOptions(){var _=this.context.localize;return[{label:_("January"),value:0},{label:_("February"),value:1},{label:_("March"),value:2},{label:_("April"),value:3},{label:_("May"),value:4},{label:_("June"),value:5},{label:_("July"),value:6},{label:_("August"),value:7},{label:_("September"),value:8},{label:_("October"),value:9},{label:_("November"),value:10},{label:_("December"),value:11}]}onMonthChange(value){var currentDateInJS=new Date(this.getAdjustedPlotlyJSDateTime(this.props.value));currentDateInJS.setMonth(value);var plotlyJSDate=this.toPlotlyJSDate(currentDateInJS);if((0,_dates.isDateTime)(plotlyJSDate)){this.props.onChange(plotlyJSDate)}var _this$parsePlotlyJSDa2=this.parsePlotlyJSDateTime(plotlyJSDate),time=_this$parsePlotlyJSDa2.time,date=_this$parsePlotlyJSDa2.date;this.setState({timeValue:time,dateValue:date})}onYearChange(value){var currentDateInJS=new Date(this.getAdjustedPlotlyJSDateTime(this.props.value));currentDateInJS.setFullYear(value);var plotlyJSDate=this.toPlotlyJSDate(currentDateInJS);if((0,_dates.isDateTime)(plotlyJSDate)){this.props.onChange(plotlyJSDate)}var _this$parsePlotlyJSDa3=this.parsePlotlyJSDateTime(plotlyJSDate),time=_this$parsePlotlyJSDa3.time,date=_this$parsePlotlyJSDa3.date;this.setState({timeValue:time,dateValue:date})}parsePlotlyJSDateTime(value){var parsed=value.split(" ");return{date:parsed[0],time:parsed[1]?parsed[1]:""}}getAMPM(date,time,_){var plotlyJSDateTime=date+" "+time;var isValidDateTime=(0,_dates.isDateTime)(plotlyJSDateTime);var JSDate=new Date(this.getAdjustedPlotlyJSDateTime(plotlyJSDateTime));var localeTime=JSDate.toLocaleTimeString("en-US").split(" ");var parsedTime=time.split(":").reduce((timeArray,timePart)=>{var parsed=timePart.split(".");return timeArray.concat(parsed)},[]);var isNoon=parsedTime[0]==="12"&&parsedTime.slice(1).every(part=>parseInt(part,10)===0);return!isValidDateTime||time===""||JSDate.toDateString()==="Invalid Date"?"":localeTime[1]==="PM"?isNoon?_("noon"):"PM":"AM"}adjustedTime(time){if(time.toString().length<=2){return time+":00"}return time}onTimeChange(value){var _this$parsePlotlyJSDa4=this.parsePlotlyJSDateTime(this.props.value),currentDate=_this$parsePlotlyJSDa4.date;var isValidTime=(0,_dates.isDateTime)(testDate+" "+value);this.setState({timeInputClassName:isValidTime||value===""?"datetimepicker-container-time-input":"datetimepicker-container-time-input +error",timeValue:value,AMPM:this.getAMPM(currentDate,value,this.context.localize)})}onDateChange(value){var isValidDate=(0,_dates.isDateTime)(value+" "+testTime);this.setState({dateInputClassName:isValidDate||value===""?"datetimepicker-container-date-input":"datetimepicker-container-date-input +error",dateValue:value})}onTimeUpdate(value){var _this$parsePlotlyJSDa5=this.parsePlotlyJSDateTime(this.props.value),currentTime=_this$parsePlotlyJSDa5.time,currentDate=_this$parsePlotlyJSDa5.date;var isValidTime=(0,_dates.isDateTime)(testDate+" "+value);if(value===""){this.setState({timeInputClassName:"datetimepicker-container-time-input",timeValue:currentTime,AMPM:this.getAMPM(currentDate,currentTime,this.context.localize)});return}if(isValidTime){this.props.onChange(currentDate+" "+value)}}onDateUpdate(value){var _this$parsePlotlyJSDa6=this.parsePlotlyJSDateTime(this.props.value),currentDate=_this$parsePlotlyJSDa6.date,currentTime=_this$parsePlotlyJSDa6.time;var isValidDate=(0,_dates.isDateTime)(value+" "+testTime);if(isValidDate){this.props.onChange(value+" "+currentTime);return}if(value===""){this.setState({dateValue:currentDate,dateInputClassName:"datetimepicker-container-date-input"});return}}getAdjustedPlotlyJSDateTime(dateTimeString){var _this$parsePlotlyJSDa7=this.parsePlotlyJSDateTime(dateTimeString),date=_this$parsePlotlyJSDa7.date,time=_this$parsePlotlyJSDa7.time;return date+" "+this.adjustedTime(time)}render(){var JSDate=new Date(this.getAdjustedPlotlyJSDateTime(this.state.dateValue+" "+testTime));var isValidJSDate=JSDate.toDateString()!=="Invalid Date";var currentYear=isValidJSDate?JSDate.getFullYear():new Date().getFullYear();var currentMonth=isValidJSDate?JSDate.getMonth():new Date().getMonth();return _react.default.createElement("div",{className:"datetimepicker-container"},_react.default.createElement(_TextInput.default,{value:this.state.dateValue,editableClassName:this.state.dateInputClassName,onChange:this.onDateChange,onUpdate:this.onDateUpdate,placeholder:datePlaceholder}),_react.default.createElement("div",{className:"datetimepicker-container-icons"},_react.default.createElement(_plotlyIcons.CalendarMultiselectIcon,{onClick:()=>this.setState({calendarOpen:!this.state.calendarOpen}),className:this.state.calendarOpen?"datetimepicker-date-icon--selected":"datetimepicker-date-icon"})),this.state.calendarOpen?_react.default.createElement("div",{className:"datetimepicker-container__content"},this.state.calendarOpen?_react.default.createElement("div",{className:"datetimepicker-datepicker-container"},_react.default.createElement("div",{className:"datetimepicker-datepicker-navbar"},_react.default.createElement(_Dropdown.default,{options:this.getMonthOptions(),value:currentMonth,className:"datimepicker-monthpicker",clearable:false,onChange:this.onMonthChange}),_react.default.createElement(_Dropdown.default,{options:this.getYearOptions(currentYear),value:currentYear,className:"datimepicker-yearpicker",clearable:false,onChange:this.onYearChange})),_react.default.createElement(_reactDayPicker.default,{className:"datepicker-container-rce",modifiers:{highlighted:isValidJSDate?JSDate:""},month:isValidJSDate?JSDate:new Date,onDayClick:value=>{var plotlyDate=this.toPlotlyJSDate(value).split(" ")[0];this.onDateChange(plotlyDate);this.onDateUpdate(plotlyDate)}})):null):null,_react.default.createElement("div",{className:"datetimepicker-container-time"},_react.default.createElement(_TextInput.default,{value:this.state.timeValue,onChange:this.onTimeChange,onUpdate:this.onTimeUpdate,placeholder:timePlaceholder,editableClassName:this.state.timeInputClassName}),_react.default.createElement("span",{className:"datetimepicker-date-units"},this.state.AMPM)))}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}exports.default=DateTimePicker;DateTimePicker.propTypes={value:_propTypes.default.string.isRequired,onChange:_propTypes.default.func.isRequired};DateTimePicker.contextTypes={localize:_propTypes.default.func};;(function(){var reactHotLoader=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default:undefined;if(!reactHotLoader){return}reactHotLoader.register(testDate,"testDate","/Users/razvan/Work/react-chart-editor/src/components/widgets/DateTimePicker.js");reactHotLoader.register(testTime,"testTime","/Users/razvan/Work/react-chart-editor/src/components/widgets/DateTimePicker.js");reactHotLoader.register(datePlaceholder,"datePlaceholder","/Users/razvan/Work/react-chart-editor/src/components/widgets/DateTimePicker.js");reactHotLoader.register(timePlaceholder,"timePlaceholder","/Users/razvan/Work/react-chart-editor/src/components/widgets/DateTimePicker.js");reactHotLoader.register(DateTimePicker,"DateTimePicker","/Users/razvan/Work/react-chart-editor/src/components/widgets/DateTimePicker.js")})();;(function(){var leaveModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.leaveModule:undefined;leaveModule&&leaveModule(module)})();
//# sourceMappingURL=DateTimePicker.js.map