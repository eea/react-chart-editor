{"version":3,"file":"TraceAccordion.js","names":["_PlotlyFold","_interopRequireDefault","require","_TraceRequiredPanel","_PlotlyPanel","_propTypes","_react","_interopRequireWildcard","_constants","_lib","_reactTabs","_traceTypes","_PanelEmpty","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","enterModule","reactHotLoaderGlobal","undefined","module","__signature__","signature","TraceFold","connectTraceToPlot","PlotlyFold","TraceAccordion","Component","constructor","props","context","setLocals","UNSAFE_componentWillReceiveProps","nextProps","nextContext","base","canGroup","fullData","data","traceFilterCondition","filteredTracesDataIndexes","filteredTraces","length","filter","fullTrace","tr","index","trace","push","renderGroupedTraceFolds","localize","_","dataArrayPositionsByTraceType","fullDataArrayPositionsByTraceType","forEach","traceType","plotlyTraceToCustomTrace","_expandedIndex","keys","map","type","createElement","key","traceIndexes","name","traceTypes","find","value","label","fullDataArrayPosition","children","renderUngroupedTraceFolds","d","canDelete","canAdd","renderTraceFolds","renderTracePanelHelp","PanelMessage","heading","render","canReorder","addAction","handler","_ref","onUpdate","EDITOR_ACTIONS","ADD_TRACE","traceFolds","noPadding","Tabs","TabList","Tab","TabPanel","__reactstandin__regenerateByEval","code","eval","contextTypes","PropTypes","array","func","propTypes","bool","node","_default","_default2","exports","reactHotLoader","register","leaveModule"],"sources":["../../../src/components/containers/TraceAccordion.js"],"sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport TraceRequiredPanel from './TraceRequiredPanel';\nimport PlotlyPanel from './PlotlyPanel';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {EDITOR_ACTIONS} from 'lib/constants';\nimport {connectTraceToPlot, plotlyTraceToCustomTrace} from 'lib';\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs';\nimport {traceTypes} from 'lib/traceTypes';\nimport {PanelMessage} from './PanelEmpty';\n\nconst TraceFold = connectTraceToPlot(PlotlyFold);\n\nclass TraceAccordion extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.setLocals(props, context);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    this.setLocals(nextProps, nextContext);\n  }\n\n  setLocals(props, context) {\n    const base = props.canGroup ? context.fullData : context.data;\n    const traceFilterCondition = this.props.traceFilterCondition || (() => true);\n\n    this.filteredTracesDataIndexes = [];\n    this.filteredTraces = [];\n\n    if (base && base.length && context.fullData.length) {\n      this.filteredTraces = base.filter((t, i) => {\n        const fullTrace = props.canGroup ? t : context.fullData.filter((tr) => tr.index === i)[0];\n\n        if (fullTrace) {\n          const trace = context.data[fullTrace.index];\n          if (traceFilterCondition(trace, fullTrace)) {\n            this.filteredTracesDataIndexes.push(fullTrace.index);\n            return true;\n          }\n        }\n\n        return false;\n      });\n    }\n  }\n\n  renderGroupedTraceFolds() {\n    if (!this.filteredTraces.length || this.filteredTraces.length <= 1) {\n      return null;\n    }\n\n    const {localize: _} = this.context;\n    const dataArrayPositionsByTraceType = {};\n    const fullDataArrayPositionsByTraceType = {};\n\n    this.filteredTraces.forEach((trace) => {\n      const traceType = plotlyTraceToCustomTrace(trace);\n      if (!dataArrayPositionsByTraceType[traceType]) {\n        dataArrayPositionsByTraceType[traceType] = [];\n      }\n\n      if (!fullDataArrayPositionsByTraceType[traceType]) {\n        fullDataArrayPositionsByTraceType[traceType] = [];\n      }\n\n      dataArrayPositionsByTraceType[traceType].push(trace.index);\n      // _expandedIndex is the trace's index in the fullData array\n      fullDataArrayPositionsByTraceType[traceType].push(trace._expandedIndex || trace.index);\n    });\n\n    return Object.keys(fullDataArrayPositionsByTraceType).map((type, index) => (\n      <TraceFold\n        key={index}\n        traceIndexes={dataArrayPositionsByTraceType[type]}\n        name={traceTypes(_).find((t) => t.value === type).label}\n        fullDataArrayPosition={fullDataArrayPositionsByTraceType[type]}\n      >\n        {this.props.children}\n      </TraceFold>\n    ));\n  }\n\n  renderUngroupedTraceFolds() {\n    if (this.filteredTraces.length) {\n      return this.filteredTraces.map((d, i) => (\n        <TraceFold\n          key={i}\n          traceIndexes={[d.index]}\n          canDelete={this.props.canAdd}\n          fullDataArrayPosition={[d._expandedIndex || d.index]}\n        >\n          {this.props.children}\n        </TraceFold>\n      ));\n    }\n    return null;\n  }\n\n  renderTraceFolds() {\n    if (this.filteredTraces.length) {\n      return this.filteredTraces.map((d, i) => (\n        <TraceFold\n          key={i}\n          traceIndexes={[this.filteredTracesDataIndexes[i]]}\n          canDelete={this.props.canAdd}\n        >\n          {this.props.children}\n        </TraceFold>\n      ));\n    }\n    return null;\n  }\n\n  renderTracePanelHelp() {\n    const _ = this.context.localize;\n    return (\n      <PanelMessage heading={_('Trace your data.')}>\n        <p>\n          {_('Traces of various types like bar and line are the building blocks of your figure.')}\n        </p>\n        <p>\n          {_(\n            'You can add as many as you like, mixing and matching types and arranging them into subplots.'\n          )}\n        </p>\n        <p>{_('Click on the + button above to add a trace.')}</p>\n      </PanelMessage>\n    );\n  }\n\n  render() {\n    const {canAdd, canGroup, canReorder} = this.props;\n    const _ = this.context.localize;\n\n    if (canAdd) {\n      const addAction = {\n        label: _('Trace'),\n        handler: ({onUpdate}) => {\n          if (onUpdate) {\n            onUpdate({\n              type: EDITOR_ACTIONS.ADD_TRACE,\n            });\n          }\n        },\n      };\n      const traceFolds = this.renderTraceFolds();\n      return (\n        <PlotlyPanel addAction={addAction} canReorder={canReorder}>\n          {traceFolds ? traceFolds : this.renderTracePanelHelp()}\n        </PlotlyPanel>\n      );\n    }\n\n    if (canGroup) {\n      if (this.filteredTraces.length === 1) {\n        return <TraceRequiredPanel>{this.renderUngroupedTraceFolds()}</TraceRequiredPanel>;\n      }\n\n      if (this.filteredTraces.length > 1) {\n        return (\n          <TraceRequiredPanel noPadding>\n            <Tabs>\n              <TabList>\n                <Tab>{_('Individually')}</Tab>\n                <Tab>{_('By Type')}</Tab>\n              </TabList>\n              <TabPanel>\n                <PlotlyPanel>{this.renderUngroupedTraceFolds()}</PlotlyPanel>\n              </TabPanel>\n              <TabPanel>\n                <PlotlyPanel>{this.renderGroupedTraceFolds()}</PlotlyPanel>\n              </TabPanel>\n            </Tabs>\n          </TraceRequiredPanel>\n        );\n      }\n    }\n\n    return <TraceRequiredPanel>{this.renderTraceFolds()}</TraceRequiredPanel>;\n  }\n}\n\nTraceAccordion.contextTypes = {\n  fullData: PropTypes.array,\n  data: PropTypes.array,\n  localize: PropTypes.func,\n};\n\nTraceAccordion.propTypes = {\n  canAdd: PropTypes.bool,\n  canGroup: PropTypes.bool,\n  canReorder: PropTypes.bool,\n  children: PropTypes.node,\n  traceFilterCondition: PropTypes.func,\n};\n\nexport default TraceAccordion;\n"],"mappings":"6FAAA,IAAAA,WAAA,CAAAC,sBAAA,CAAAC,OAAA,kBACA,IAAAC,mBAAA,CAAAF,sBAAA,CAAAC,OAAA,0BACA,IAAAE,YAAA,CAAAH,sBAAA,CAAAC,OAAA,mBACA,IAAAG,UAAA,CAAAJ,sBAAA,CAAAC,OAAA,gBACA,IAAAI,MAAA,CAAAC,uBAAA,CAAAL,OAAA,WACA,IAAAM,UAAA,CAAAN,OAAA,wBACA,IAAAO,IAAA,CAAAP,OAAA,cACA,IAAAQ,UAAA,CAAAR,OAAA,eACA,IAAAS,WAAA,CAAAT,OAAA,yBACA,IAAAU,WAAA,CAAAV,OAAA,iBAA0C,SAAAW,yBAAAC,CAAA,wBAAAC,OAAA,iBAAAC,CAAA,KAAAD,OAAA,CAAAE,CAAA,KAAAF,OAAA,QAAAF,wBAAA,UAAAA,yBAAAC,CAAA,SAAAA,CAAA,CAAAG,CAAA,CAAAD,CAAA,GAAAF,CAAA,WAAAP,wBAAAO,CAAA,CAAAE,CAAA,MAAAA,CAAA,EAAAF,CAAA,EAAAA,CAAA,CAAAI,UAAA,QAAAJ,CAAA,WAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAK,OAAA,CAAAL,CAAA,MAAAG,CAAA,CAAAJ,wBAAA,CAAAG,CAAA,KAAAC,CAAA,EAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,SAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,MAAAQ,CAAA,EAAAC,SAAA,OAAAC,CAAA,CAAAC,MAAA,CAAAC,cAAA,EAAAD,MAAA,CAAAE,wBAAA,SAAAC,CAAA,IAAAd,CAAA,gBAAAc,CAAA,KAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,CAAAc,CAAA,OAAAG,CAAA,CAAAP,CAAA,CAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,CAAAc,CAAA,OAAAG,CAAA,GAAAA,CAAA,CAAAV,GAAA,EAAAU,CAAA,CAAAC,GAAA,EAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,CAAAM,CAAA,CAAAG,CAAA,EAAAT,CAAA,CAAAM,CAAA,EAAAd,CAAA,CAAAc,CAAA,SAAAN,CAAA,CAAAH,OAAA,CAAAL,CAAA,CAAAG,CAAA,EAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,CAAAQ,CAAA,EAAAA,CAAA,UAAArB,uBAAAa,CAAA,SAAAA,CAAA,EAAAA,CAAA,CAAAI,UAAA,CAAAJ,CAAA,EAAAK,OAAA,CAAAL,CAAA,kBAAAmB,WAAA,QAAAC,oBAAA,eAAAA,oBAAA,CAAAD,WAAA,CAAAE,SAAA,CAAAF,WAAA,EAAAA,WAAA,CAAAG,MAAA,UAAAC,aAAA,QAAAH,oBAAA,eAAAA,oBAAA,CAAAf,OAAA,CAAAmB,SAAA,UAAAd,CAAA,SAAAA,CAAA,EAE1C,GAAM,CAAAe,SAAS,CAAG,GAAAC,uBAAkB,EAACC,mBAAU,CAAC,CAEhD,KAAM,CAAAC,cAAc,QAAS,CAAAC,gBAAU,CACrCC,WAAWA,CAACC,KAAK,CAAEC,OAAO,CAAE,CAC1B,KAAK,CAACD,KAAK,CAAEC,OAAO,CAAC,CACrB,IAAI,CAACC,SAAS,CAACF,KAAK,CAAEC,OAAO,CAC/B,CAEAE,gCAAgCA,CAACC,SAAS,CAAEC,WAAW,CAAE,CACvD,IAAI,CAACH,SAAS,CAACE,SAAS,CAAEC,WAAW,CACvC,CAEAH,SAASA,CAACF,KAAK,CAAEC,OAAO,CAAE,CACxB,GAAM,CAAAK,IAAI,CAAGN,KAAK,CAACO,QAAQ,CAAGN,OAAO,CAACO,QAAQ,CAAGP,OAAO,CAACQ,IAAI,CAC7D,GAAM,CAAAC,oBAAoB,CAAG,IAAI,CAACV,KAAK,CAACU,oBAAoB,GAAK,IAAM,IAAI,CAAC,CAE5E,IAAI,CAACC,yBAAyB,CAAG,EAAE,CACnC,IAAI,CAACC,cAAc,CAAG,EAAE,CAExB,GAAIN,IAAI,EAAIA,IAAI,CAACO,MAAM,EAAIZ,OAAO,CAACO,QAAQ,CAACK,MAAM,CAAE,CAClD,IAAI,CAACD,cAAc,CAAGN,IAAI,CAACQ,MAAM,CAAC,CAAC1C,CAAC,CAAEc,CAAC,GAAK,CAC1C,GAAM,CAAA6B,SAAS,CAAGf,KAAK,CAACO,QAAQ,CAAGnC,CAAC,CAAG6B,OAAO,CAACO,QAAQ,CAACM,MAAM,CAAEE,EAAE,EAAKA,EAAE,CAACC,KAAK,GAAK/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAEzF,GAAI6B,SAAS,CAAE,CACb,GAAM,CAAAG,KAAK,CAAGjB,OAAO,CAACQ,IAAI,CAACM,SAAS,CAACE,KAAK,CAAC,CAC3C,GAAIP,oBAAoB,CAACQ,KAAK,CAAEH,SAAS,CAAC,CAAE,CAC1C,IAAI,CAACJ,yBAAyB,CAACQ,IAAI,CAACJ,SAAS,CAACE,KAAK,CAAC,CACpD,MAAO,KACT,CACF,CAEA,MAAO,MACT,CAAC,CACH,CACF,CAEAG,uBAAuBA,CAAA,CAAG,CACxB,GAAI,CAAC,IAAI,CAACR,cAAc,CAACC,MAAM,EAAI,IAAI,CAACD,cAAc,CAACC,MAAM,EAAI,CAAC,CAAE,CAClE,MAAO,KACT,CAEA,GAAM,CAACQ,QAAQ,CAAEC,CAAC,CAAC,CAAG,IAAI,CAACrB,OAAO,CAClC,GAAM,CAAAsB,6BAA6B,CAAG,CAAC,CAAC,CACxC,GAAM,CAAAC,iCAAiC,CAAG,CAAC,CAAC,CAE5C,IAAI,CAACZ,cAAc,CAACa,OAAO,CAAEP,KAAK,EAAK,CACrC,GAAM,CAAAQ,SAAS,CAAG,GAAAC,6BAAwB,EAACT,KAAK,CAAC,CACjD,GAAI,CAACK,6BAA6B,CAACG,SAAS,CAAC,CAAE,CAC7CH,6BAA6B,CAACG,SAAS,CAAC,CAAG,EAC7C,CAEA,GAAI,CAACF,iCAAiC,CAACE,SAAS,CAAC,CAAE,CACjDF,iCAAiC,CAACE,SAAS,CAAC,CAAG,EACjD,CAEAH,6BAA6B,CAACG,SAAS,CAAC,CAACP,IAAI,CAACD,KAAK,CAACD,KAAK,CAAC,CAE1DO,iCAAiC,CAACE,SAAS,CAAC,CAACP,IAAI,CAACD,KAAK,CAACU,cAAc,EAAIV,KAAK,CAACD,KAAK,CACvF,CAAC,CAAC,CAEF,MAAO,CAAArC,MAAM,CAACiD,IAAI,CAACL,iCAAiC,CAAC,CAACM,GAAG,CAAC,CAACC,IAAI,CAAEd,KAAK,GACpExD,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACtC,SAAS,EACRuC,GAAG,CAAEhB,KAAM,CACXiB,YAAY,CAAEX,6BAA6B,CAACQ,IAAI,CAAE,CAClDI,IAAI,CAAE,GAAAC,sBAAU,EAACd,CAAC,CAAC,CAACe,IAAI,CAAEjE,CAAC,EAAKA,CAAC,CAACkE,KAAK,GAAKP,IAAI,CAAC,CAACQ,KAAM,CACxDC,qBAAqB,CAAEhB,iCAAiC,CAACO,IAAI,CAAE,EAE9D,IAAI,CAAC/B,KAAK,CAACyC,QACH,CACZ,CACH,CAEAC,yBAAyBA,CAAA,CAAG,CAC1B,GAAI,IAAI,CAAC9B,cAAc,CAACC,MAAM,CAAE,CAC9B,MAAO,KAAI,CAACD,cAAc,CAACkB,GAAG,CAAC,CAACa,CAAC,CAAEzD,CAAC,GAClCzB,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACtC,SAAS,EACRuC,GAAG,CAAE/C,CAAE,CACPgD,YAAY,CAAE,CAACS,CAAC,CAAC1B,KAAK,CAAE,CACxB2B,SAAS,CAAE,IAAI,CAAC5C,KAAK,CAAC6C,MAAO,CAC7BL,qBAAqB,CAAE,CAACG,CAAC,CAACf,cAAc,EAAIe,CAAC,CAAC1B,KAAK,CAAE,EAEpD,IAAI,CAACjB,KAAK,CAACyC,QACH,CACZ,CACH,CACA,MAAO,KACT,CAEAK,gBAAgBA,CAAA,CAAG,CACjB,GAAI,IAAI,CAAClC,cAAc,CAACC,MAAM,CAAE,CAC9B,MAAO,KAAI,CAACD,cAAc,CAACkB,GAAG,CAAC,CAACa,CAAC,CAAEzD,CAAC,GAClCzB,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACtC,SAAS,EACRuC,GAAG,CAAE/C,CAAE,CACPgD,YAAY,CAAE,CAAC,IAAI,CAACvB,yBAAyB,CAACzB,CAAC,CAAC,CAAE,CAClD0D,SAAS,CAAE,IAAI,CAAC5C,KAAK,CAAC6C,MAAO,EAE5B,IAAI,CAAC7C,KAAK,CAACyC,QACH,CACZ,CACH,CACA,MAAO,KACT,CAEAM,oBAAoBA,CAAA,CAAG,CACrB,GAAM,CAAAzB,CAAC,CAAG,IAAI,CAACrB,OAAO,CAACoB,QAAQ,CAC/B,MACE,CAAA5D,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACjE,WAAA,CAAAiF,YAAY,EAACC,OAAO,CAAE3B,CAAC,CAAC,kBAAkB,CAAE,EAC3C7D,MAAA,CAAAa,OAAA,CAAA0D,aAAA,UACGV,CAAC,CAAC,mFAAmF,CACrF,CAAC,CACJ7D,MAAA,CAAAa,OAAA,CAAA0D,aAAA,UACGV,CAAC,CACA,8FACF,CACC,CAAC,CACJ7D,MAAA,CAAAa,OAAA,CAAA0D,aAAA,UAAIV,CAAC,CAAC,6CAA6C,CAAK,CAC5C,CAElB,CAEA4B,MAAMA,CAAA,CAAG,CACP,GAAM,CAACL,MAAM,CAAEtC,QAAQ,CAAE4C,UAAU,CAAC,CAAG,IAAI,CAACnD,KAAK,CACjD,GAAM,CAAAsB,CAAC,CAAG,IAAI,CAACrB,OAAO,CAACoB,QAAQ,CAE/B,GAAIwB,MAAM,CAAE,CACV,GAAM,CAAAO,SAAS,CAAG,CAChBb,KAAK,CAAEjB,CAAC,CAAC,OAAO,CAAC,CACjB+B,OAAO,CAAEC,IAAA,EAAgB,IAAf,CAACC,QAAQ,CAAC,CAAAD,IAAA,CAClB,GAAIC,QAAQ,CAAE,CACZA,QAAQ,CAAC,CACPxB,IAAI,CAAEyB,yBAAc,CAACC,SACvB,CAAC,CACH,CACF,CACF,CAAC,CACD,GAAM,CAAAC,UAAU,CAAG,IAAI,CAACZ,gBAAgB,CAAC,CAAC,CAC1C,MACE,CAAArF,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACzE,YAAA,CAAAe,OAAW,EAAC8E,SAAS,CAAEA,SAAU,CAACD,UAAU,CAAEA,UAAW,EACvDO,UAAU,CAAGA,UAAU,CAAG,IAAI,CAACX,oBAAoB,CAAC,CAC1C,CAEjB,CAEA,GAAIxC,QAAQ,CAAE,CACZ,GAAI,IAAI,CAACK,cAAc,CAACC,MAAM,GAAK,CAAC,CAAE,CACpC,MAAO,CAAApD,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAAC1E,mBAAA,CAAAgB,OAAkB,MAAE,IAAI,CAACoE,yBAAyB,CAAC,CAAsB,CACnF,CAEA,GAAI,IAAI,CAAC9B,cAAc,CAACC,MAAM,CAAG,CAAC,CAAE,CAClC,MACE,CAAApD,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAAC1E,mBAAA,CAAAgB,OAAkB,EAACqF,SAAS,OAC3BlG,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACnE,UAAA,CAAA+F,IAAI,MACHnG,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACnE,UAAA,CAAAgG,OAAO,MACNpG,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACnE,UAAA,CAAAiG,GAAG,MAAExC,CAAC,CAAC,cAAc,CAAO,CAAC,CAC9B7D,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACnE,UAAA,CAAAiG,GAAG,MAAExC,CAAC,CAAC,SAAS,CAAO,CACjB,CAAC,CACV7D,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACnE,UAAA,CAAAkG,QAAQ,MACPtG,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACzE,YAAA,CAAAe,OAAW,MAAE,IAAI,CAACoE,yBAAyB,CAAC,CAAe,CACpD,CAAC,CACXjF,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACnE,UAAA,CAAAkG,QAAQ,MACPtG,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAACzE,YAAA,CAAAe,OAAW,MAAE,IAAI,CAAC8C,uBAAuB,CAAC,CAAe,CAClD,CACN,CACY,CAExB,CACF,CAEA,MAAO,CAAA3D,MAAA,CAAAa,OAAA,CAAA0D,aAAA,CAAC1E,mBAAA,CAAAgB,OAAkB,MAAE,IAAI,CAACwE,gBAAgB,CAAC,CAAsB,CAC1E,CAACkB,iCAAA/B,GAAA,CAAAgC,IAAA,OAAAhC,GAAA,EAAAiC,IAAA,CAAAD,IAAA,EACH,CAEApE,cAAc,CAACsE,YAAY,CAAG,CAC5B3D,QAAQ,CAAE4D,kBAAS,CAACC,KAAK,CACzB5D,IAAI,CAAE2D,kBAAS,CAACC,KAAK,CACrBhD,QAAQ,CAAE+C,kBAAS,CAACE,IACtB,CAAC,CAEDzE,cAAc,CAAC0E,SAAS,CAAG,CACzB1B,MAAM,CAAEuB,kBAAS,CAACI,IAAI,CACtBjE,QAAQ,CAAE6D,kBAAS,CAACI,IAAI,CACxBrB,UAAU,CAAEiB,kBAAS,CAACI,IAAI,CAC1B/B,QAAQ,CAAE2B,kBAAS,CAACK,IAAI,CACxB/D,oBAAoB,CAAE0D,kBAAS,CAACE,IAClC,CAAC,CAAC,IAAAI,QAAA,CAEa7E,cAAc,KAAA8E,SAAA,CAAAC,OAAA,CAAAtG,OAAA,CAAAoG,QAAA,kBAAAG,cAAA,QAAAxF,oBAAA,eAAAA,oBAAA,CAAAf,OAAA,CAAAgB,SAAA,KAAAuF,cAAA,SAAAA,cAAA,CAAAC,QAAA,CA1LvBpF,SAAS,kGAAAmF,cAAA,CAAAC,QAAA,CAETjF,cAAc,uGAAAgF,cAAA,CAAAC,QAAA,CAAAJ,QAAA,qHAAAK,WAAA,QAAA1F,oBAAA,eAAAA,oBAAA,CAAA0F,WAAA,CAAAzF,SAAA,CAAAyF,WAAA,EAAAA,WAAA,CAAAxF,MAAA","ignoreList":[]}