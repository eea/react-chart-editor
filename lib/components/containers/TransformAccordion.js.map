{"version":3,"file":"TransformAccordion.js","names":["_PlotlyFold","_interopRequireDefault","require","_PlotlyPanel","_propTypes","_react","_interopRequireWildcard","_lib","_PanelEmpty","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","enterModule","reactHotLoaderGlobal","undefined","module","__signature__","signature","TransformFold","connectTransformToTrace","PlotlyFold","TransformAccordion","Component","render","_this$context","context","_this$context$fullCon","fullContainer","transforms","_","localize","container","dataSourceOptions","children","props","transformTypes","label","type","transformBy","map","tr","foldNameSuffix","groupssrc","find","d","value","concat","targetsrc","filteredTransforms","filter","_ref","Boolean","content","length","createElement","key","transformIndex","name","_ref2","canDelete","addActionOptions","some","addAction","handler","_ref3","updateContainer","Array","isArray","payload","target","groups","styles","PanelMessage","icon","style","textAlign","__reactstandin__regenerateByEval","code","eval","contextTypes","PropTypes","object","func","array","propTypes","node","_default","_default2","exports","reactHotLoader","register","leaveModule"],"sources":["../../../src/components/containers/TransformAccordion.js"],"sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport PlotlyPanel from './PlotlyPanel';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectTransformToTrace} from 'lib';\nimport {PanelMessage} from './PanelEmpty';\n\nconst TransformFold = connectTransformToTrace(PlotlyFold);\n\nclass TransformAccordion extends Component {\n  render() {\n    const {\n      fullContainer: {transforms = []},\n      localize: _,\n      container,\n      dataSourceOptions,\n    } = this.context;\n    const {children} = this.props;\n\n    const transformTypes = [\n      {label: _('Filter'), type: 'filter'},\n      {label: _('Split'), type: 'groupby'},\n      {label: _('Aggregate'), type: 'aggregate'},\n      {label: _('Sort'), type: 'sort'},\n    ];\n\n    const transformBy =\n      container.transforms &&\n      container.transforms.map((tr) => {\n        let foldNameSuffix = '';\n        if (tr.groupssrc) {\n          const groupssrc =\n            dataSourceOptions && dataSourceOptions.find((d) => d.value === tr.groupssrc);\n          foldNameSuffix = `: ${groupssrc && groupssrc.label ? groupssrc.label : tr.groupssrc}`;\n        } else if (tr.targetsrc) {\n          const targetsrc =\n            dataSourceOptions && dataSourceOptions.find((d) => d.value === tr.targetsrc);\n          foldNameSuffix = `: ${targetsrc && targetsrc.label ? targetsrc.label : tr.targetsrc}`;\n        }\n        return foldNameSuffix;\n      });\n\n    const filteredTransforms = transforms.filter(({type}) => Boolean(type));\n    const content =\n      filteredTransforms.length &&\n      filteredTransforms.map((tr, i) => (\n        <TransformFold\n          key={i}\n          transformIndex={i}\n          name={`${transformTypes.filter(({type}) => type === tr.type)[0].label}${\n            transformBy && transformBy[i]\n          }`}\n          canDelete={true}\n        >\n          {children}\n        </TransformFold>\n      ));\n\n    // cannot have 2 Split transforms on one trace:\n    // https://github.com/plotly/plotly.js/issues/1742\n    const addActionOptions =\n      container.transforms && container.transforms.some((t) => t.type === 'groupby')\n        ? transformTypes.filter((t) => t.type !== 'groupby')\n        : transformTypes;\n\n    const addAction = {\n      label: _('Transform'),\n      handler: addActionOptions.map(({label, type}) => {\n        return {\n          label,\n          handler: (context) => {\n            const {fullContainer, updateContainer} = context;\n            if (updateContainer) {\n              const transformIndex = Array.isArray(fullContainer.transforms)\n                ? fullContainer.transforms.length\n                : 0;\n              const key = `transforms[${transformIndex}]`;\n\n              const payload = {type};\n              if (type === 'filter') {\n                payload.target = [];\n                payload.targetsrc = null;\n              } else if (type !== 'sort') {\n                payload.groupssrc = null;\n                payload.groups = null;\n              }\n\n              if (type === 'groupby') {\n                payload.styles = [];\n              }\n\n              updateContainer({[key]: payload});\n            }\n          },\n        };\n      }),\n    };\n\n    return (\n      <PlotlyPanel addAction={addAction}>\n        {content ? (\n          content\n        ) : (\n          <PanelMessage icon={null}>\n            <div style={{textAlign: 'left'}}>\n              <p>\n                <strong>{_('Filter')}</strong>{' '}\n                {_(' transforms allow you to filter data out from a trace.')}\n              </p>\n              <p>\n                <strong>{_('Split')}</strong>{' '}\n                {_(\n                  ' transforms allow you to create multiple traces from one source trace, so as to style them differently.'\n                )}\n              </p>\n              <p>\n                <strong>{_('Aggregate')}</strong>{' '}\n                {_(\n                  ' transforms allow you to summarize a trace using an aggregate function like \"average\" or \"minimum\".'\n                )}\n              </p>\n              <p>\n                <strong>{_('Sort')}</strong>{' '}\n                {_(\n                  ' transforms allow you to sort a trace, so as to control marker overlay or line connection order.'\n                )}\n              </p>\n            </div>\n            <p>{_('Click on the + button above to add a transform.')}</p>\n          </PanelMessage>\n        )}\n      </PlotlyPanel>\n    );\n  }\n}\n\nTransformAccordion.contextTypes = {\n  fullContainer: PropTypes.object,\n  localize: PropTypes.func,\n  container: PropTypes.object,\n  dataSourceOptions: PropTypes.array,\n};\n\nTransformAccordion.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default TransformAccordion;\n"],"mappings":"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","ignoreList":[]}