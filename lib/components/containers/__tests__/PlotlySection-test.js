"use strict";var _react=_interopRequireDefault(require("react"));var _PlotlySection=_interopRequireDefault(require("../PlotlySection"));var _derived=require("../derived");var _fields=require("../../fields");var _testUtils=require("../../../lib/test-utils");var _lib=require("../../../lib");var _enzyme=require("enzyme");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(function(){var enterModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.enterModule:undefined;enterModule&&enterModule(module)})();function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var __signature__=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default.signature:function(a){return a};const TraceSection=(0,_lib.connectTraceToPlot)(_PlotlySection.default);describe("PlotlySection",()=>{it("is visible if it contains any visible children",()=>{const wrapper=(0,_enzyme.mount)(_react.default.createElement(_testUtils.TestEditor,_extends({onUpdate:jest.fn()},_testUtils.fixtures.scatter()),_react.default.createElement(TraceSection,{name:"test-section",traceIndexes:[0]},_react.default.createElement(_fields.Flaglist,{attr:"mode",options:[{label:"Lines",value:"lines"},{label:"Points",value:"markers"}]}),_react.default.createElement(_fields.Numeric,{attr:"hole",min:0,max:1,step:0.1})))).find(_PlotlySection.default);expect(wrapper.children().length).toBe(1)});it("is visible if it contains any non attr children",()=>{const wrapper=(0,_enzyme.mount)(_react.default.createElement(_testUtils.TestEditor,_extends({onUpdate:jest.fn()},_testUtils.fixtures.scatter()),_react.default.createElement(_PlotlySection.default,{name:"test-section"},_react.default.createElement("div",{className:"extra"},"special extra")))).find(_PlotlySection.default);expect(wrapper.children().length).toBe(1);expect(wrapper.find(".extra").text()).toBe("special extra")});it("is not visible if it contains no visible children",()=>{const wrapper=(0,_enzyme.mount)(_react.default.createElement(_testUtils.TestEditor,_extends({onUpdate:jest.fn()},_testUtils.fixtures.scatter()),_react.default.createElement(TraceSection,{name:"test-section",traceIndexes:[0]},_react.default.createElement(_fields.Numeric,{attr:"pull",min:0,max:1,step:0.1,traceIndexes:[0]}),_react.default.createElement(_fields.Numeric,{attr:"hole",min:0,max:1,step:0.1,traceIndexes:[0]})))).find(_PlotlySection.default);expect(wrapper.find(_fields.Numeric).exists()).toBe(false)});it("will hide with Info children when attrs not defined",()=>{const TraceSection=(0,_lib.connectTraceToPlot)(_PlotlySection.default);const wrapper=(0,_enzyme.mount)(_react.default.createElement(_testUtils.TestEditor,_extends({onUpdate:jest.fn()},_testUtils.fixtures.scatter()),_react.default.createElement(TraceSection,{name:"test-section",traceIndexes:[0]},_react.default.createElement(_fields.Numeric,{attr:"badattr",traceIndexes:[0]}),_react.default.createElement(_fields.Info,null,"INFO")))).find(_PlotlySection.default);expect(wrapper.find(_fields.Info).length).toBe(0)})});describe("TraceTypeSection",()=>{it("will show when the type is right",()=>{const TraceSection=(0,_lib.connectTraceToPlot)(_derived.TraceTypeSection);const wrapper=(0,_enzyme.mount)(_react.default.createElement(_testUtils.TestEditor,_extends({onUpdate:jest.fn()},_testUtils.fixtures.scatter()),_react.default.createElement(TraceSection,{name:"test-section",traceIndexes:[0],traceTypes:["scatter"]},_react.default.createElement(_fields.Flaglist,{attr:"mode",options:[{label:"Lines",value:"lines"},{label:"Points",value:"markers"}]})))).find(_PlotlySection.default);expect(wrapper.find(_fields.Flaglist).length).toBe(1)});it("will hide when the type is wrong",()=>{const TraceSection=(0,_lib.connectTraceToPlot)(_derived.TraceTypeSection);const wrapper=(0,_enzyme.mount)(_react.default.createElement(_testUtils.TestEditor,_extends({onUpdate:jest.fn()},_testUtils.fixtures.scatter()),_react.default.createElement(TraceSection,{name:"test-section",traceIndexes:[0],traceTypes:["heatmap"]},_react.default.createElement(_fields.Flaglist,{attr:"mode",options:[{label:"Lines",value:"lines"},{label:"Points",value:"markers"}]})))).find(_PlotlySection.default);expect(wrapper.find(_fields.Flaglist).length).toBe(0)})});;(function(){var reactHotLoader=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default:undefined;if(!reactHotLoader){return}reactHotLoader.register(TraceSection,"TraceSection","/Users/razvan/Work/react-chart-editor/src/components/containers/__tests__/PlotlySection-test.js")})();;(function(){var leaveModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.leaveModule:undefined;leaveModule&&leaveModule(module)})();
//# sourceMappingURL=PlotlySection-test.js.map