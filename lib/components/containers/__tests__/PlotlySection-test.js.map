{"version":3,"file":"PlotlySection-test.js","names":["_react","_interopRequireDefault","require","_PlotlySection","_derived","_fields","_testUtils","_lib","_enzyme","e","__esModule","default","enterModule","reactHotLoaderGlobal","undefined","module","_extends","Object","assign","bind","n","arguments","length","t","r","hasOwnProperty","call","apply","__signature__","signature","a","TraceSection","connectTraceToPlot","PlotlySection","describe","it","wrapper","mount","createElement","TestEditor","onUpdate","jest","fn","fixtures","scatter","name","traceIndexes","Flaglist","attr","options","label","value","Numeric","min","max","step","find","expect","children","toBe","className","text","exists","Info","TraceTypeSection","traceTypes","reactHotLoader","register","leaveModule"],"sources":["../../../../src/components/containers/__tests__/PlotlySection-test.js"],"sourcesContent":["import React from 'react';\nimport PlotlySection from '../PlotlySection';\nimport {TraceTypeSection} from '../derived';\nimport {Flaglist, Info, Numeric} from '../../fields';\nimport {TestEditor, fixtures} from 'lib/test-utils';\nimport {connectTraceToPlot} from 'lib';\nimport {mount} from 'enzyme';\n\nconst TraceSection = connectTraceToPlot(PlotlySection);\n\ndescribe('PlotlySection', () => {\n  it('is visible if it contains any visible children', () => {\n    // mode is visible with scatter. Hole is not visible. PlotlySection should show.\n    const wrapper = mount(\n      <TestEditor onUpdate={jest.fn()} {...fixtures.scatter()}>\n        <TraceSection name=\"test-section\" traceIndexes={[0]}>\n          <Flaglist\n            attr=\"mode\"\n            options={[\n              {label: 'Lines', value: 'lines'},\n              {label: 'Points', value: 'markers'},\n            ]}\n          />\n          <Numeric attr=\"hole\" min={0} max={1} step={0.1} />\n        </TraceSection>\n      </TestEditor>\n    ).find(PlotlySection);\n\n    expect(wrapper.children().length).toBe(1);\n  });\n\n  it('is visible if it contains any non attr children', () => {\n    const wrapper = mount(\n      <TestEditor onUpdate={jest.fn()} {...fixtures.scatter()}>\n        <PlotlySection name=\"test-section\">\n          <div className=\"extra\">special extra</div>\n        </PlotlySection>\n      </TestEditor>\n    ).find(PlotlySection);\n\n    expect(wrapper.children().length).toBe(1);\n    expect(wrapper.find('.extra').text()).toBe('special extra');\n  });\n\n  it('is not visible if it contains no visible children', () => {\n    // pull and hole are not scatter attrs. PlotlySection should not show.\n    const wrapper = mount(\n      <TestEditor onUpdate={jest.fn()} {...fixtures.scatter()}>\n        <TraceSection name=\"test-section\" traceIndexes={[0]}>\n          <Numeric attr=\"pull\" min={0} max={1} step={0.1} traceIndexes={[0]} />\n          <Numeric attr=\"hole\" min={0} max={1} step={0.1} traceIndexes={[0]} />\n        </TraceSection>\n      </TestEditor>\n    ).find(PlotlySection);\n\n    expect(wrapper.find(Numeric).exists()).toBe(false);\n  });\n\n  it('will hide with Info children when attrs not defined', () => {\n    const TraceSection = connectTraceToPlot(PlotlySection);\n    const wrapper = mount(\n      <TestEditor onUpdate={jest.fn()} {...fixtures.scatter()}>\n        <TraceSection name=\"test-section\" traceIndexes={[0]}>\n          <Numeric attr=\"badattr\" traceIndexes={[0]} />\n          <Info>INFO</Info>\n        </TraceSection>\n      </TestEditor>\n    ).find(PlotlySection);\n\n    expect(wrapper.find(Info).length).toBe(0);\n  });\n});\n\ndescribe('TraceTypeSection', () => {\n  it('will show when the type is right', () => {\n    const TraceSection = connectTraceToPlot(TraceTypeSection);\n    const wrapper = mount(\n      <TestEditor onUpdate={jest.fn()} {...fixtures.scatter()}>\n        <TraceSection name=\"test-section\" traceIndexes={[0]} traceTypes={['scatter']}>\n          <Flaglist\n            attr=\"mode\"\n            options={[\n              {label: 'Lines', value: 'lines'},\n              {label: 'Points', value: 'markers'},\n            ]}\n          />\n        </TraceSection>\n      </TestEditor>\n    ).find(PlotlySection);\n\n    expect(wrapper.find(Flaglist).length).toBe(1);\n  });\n\n  it('will hide when the type is wrong', () => {\n    const TraceSection = connectTraceToPlot(TraceTypeSection);\n    const wrapper = mount(\n      <TestEditor onUpdate={jest.fn()} {...fixtures.scatter()}>\n        <TraceSection name=\"test-section\" traceIndexes={[0]} traceTypes={['heatmap']}>\n          <Flaglist\n            attr=\"mode\"\n            options={[\n              {label: 'Lines', value: 'lines'},\n              {label: 'Points', value: 'markers'},\n            ]}\n          />\n        </TraceSection>\n      </TestEditor>\n    ).find(PlotlySection);\n\n    expect(wrapper.find(Flaglist).length).toBe(0);\n  });\n});\n"],"mappings":"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","ignoreList":[]}