{"version":3,"file":"getAllAxes.js","names":["_constants","require","_2","enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","getAllAxes","fullLayout","axes","_subplots","Object","keys","filter","type","length","forEach","subplot","includes","slice","_subplot","_axisGroup","push","key","axis","_name","traceTypeToAxisType","traceType","arguments","category","traceToAxis","TRACE_TO_AXIS","assign","scene","gl3d","c","axisIdToAxisName","id","charAt","getAxisNumber","splitSubplot","split","Number","getAxisTitle","_axis$_input","axisType","capitalize","subplotNumber","_input","title","text","striptags","concat","getSubplotNumber","getSubplotTitle","_","axisName","subplotName","SUBPLOT_TO_ATTR","layout","reactHotLoader","register","leaveModule"],"sources":["../../src/lib/getAllAxes.js"],"sourcesContent":["import {TRACE_TO_AXIS, SUBPLOT_TO_ATTR, subplotName} from 'lib/constants';\nimport {capitalize, striptags} from 'lib';\n\nexport default function getAllAxes(fullLayout) {\n  const axes = [];\n  // Plotly.js should really have a helper function for this, but until it does..\n  if (fullLayout && fullLayout._subplots) {\n    Object.keys(fullLayout._subplots)\n      .filter(\n        // xaxis and yaxis already included separately in _fullLayout._subplots\n        (type) => type !== 'cartesian' && fullLayout._subplots[type].length !== 0\n      )\n      .forEach((type) => {\n        fullLayout._subplots[type].forEach((subplot) => {\n          if (['xaxis', 'yaxis'].includes(type)) {\n            // subplot will look like x2, x45, convert it to xaxis2, xaxis45\n            subplot = // eslint-disable-line no-param-reassign\n              subplot.length > 1\n                ? subplot.slice(0, 1) + 'axis' + subplot.slice(1)\n                : subplot + 'axis';\n\n            fullLayout[subplot]._subplot = subplot;\n            fullLayout[subplot]._axisGroup = type;\n            axes.push(fullLayout[subplot]);\n          } else {\n            Object.keys(fullLayout[subplot])\n              .filter((key) => key.includes('axis'))\n              .forEach((axis) => {\n                fullLayout[subplot][axis]._subplot = subplot;\n                fullLayout[subplot][axis]._axisGroup = type;\n\n                // it should be in plotly.js, but it's not there for geo axes..\n                if (!fullLayout[subplot][axis]._name) {\n                  fullLayout[subplot][axis]._name = axis;\n                }\n                axes.push(fullLayout[subplot][axis]);\n              });\n          }\n        });\n      });\n  }\n\n  return axes;\n}\n\nexport function traceTypeToAxisType(traceType, subplot = false) {\n  // plotly.js actually allows traces with no type and just\n  // defaults them to scatter, so do this here as well.\n  if (!traceType) {\n    traceType = 'scatter'; // eslint-disable-line\n  }\n\n  let category = null;\n  const traceToAxis = TRACE_TO_AXIS;\n  if (subplot) {\n    Object.assign(traceToAxis, TRACE_TO_AXIS, {scene: TRACE_TO_AXIS.gl3d});\n    delete traceToAxis.gl3d;\n  }\n\n  Object.keys(traceToAxis).forEach((c) => {\n    if (traceToAxis[c].includes(traceType)) {\n      category = c;\n    }\n  });\n\n  if (category) {\n    return category;\n  }\n\n  return null;\n}\n\nexport function axisIdToAxisName(id) {\n  return id.charAt(0) + 'axis' + id.slice(1);\n}\n\nfunction getAxisNumber(axis) {\n  const splitSubplot = axis._subplot ? axis._subplot.split(axis._axisGroup) : [];\n  return splitSubplot[1] ? Number(splitSubplot[1]) : axis._name.split('axis')[1];\n}\n\nexport function getAxisTitle(axis) {\n  const axisType = capitalize(axis._name.split('axis')[0]);\n  const subplotNumber = getAxisNumber(axis) || 1;\n\n  return axis._input?.title?.text\n    ? striptags(`${axisType}: ${axis._input.title.text}`)\n    : striptags(`${axisType} ${subplotNumber}`);\n}\n\nfunction getSubplotNumber(subplot, type) {\n  return Number(subplot.split(type)[1]);\n}\n\nexport function getSubplotTitle(subplot, type, _) {\n  const axisName = subplotName(type, _);\n  const subplotNumber = getSubplotNumber(subplot, SUBPLOT_TO_ATTR[type].layout) || '';\n\n  return `${axisName} ${subplotNumber}`;\n}\n"],"mappings":"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","ignoreList":[]}