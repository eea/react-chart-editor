{"version":3,"file":"striptags.js","names":["Object","defineProperty","exports","value","default","enterModule","reactHotLoaderGlobal","undefined","module","__signature__","signature","a","STATE_PLAINTEXT","Symbol","STATE_HTML","STATE_COMMENT","ALLOWED_TAGS_REGEX","NORMALIZE_TAG_REGEX","striptags","html","allowable_tags","tag_replacement","context","init_context","striptags_internal","init_striptags_stream","striptags_stream","init_streaming_mode","parse_allowable_tags","state","tag_buffer","depth","in_quote_char","output","idx","length","char","has","normalize_tag","slice","tag_set","Set","match","exec","add","nonNative","iterator","forEach","toLowerCase","_default","_default2","reactHotLoader","register","leaveModule"],"sources":["../../src/lib/striptags.js"],"sourcesContent":["/* eslint-disable */\n\n// The MIT License (MIT)\n//\n// Copyright (c) [2017] [Eric Norris]\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict';\n\nconst STATE_PLAINTEXT = Symbol('plaintext');\nconst STATE_HTML = Symbol('html');\nconst STATE_COMMENT = Symbol('comment');\n\nconst ALLOWED_TAGS_REGEX = /<(\\w*)>/g;\nconst NORMALIZE_TAG_REGEX = /<\\/?([^\\s\\/>]+)/;\n\nfunction striptags(html, allowable_tags, tag_replacement) {\n  html = html || '';\n  allowable_tags = allowable_tags || [];\n  tag_replacement = tag_replacement || '';\n\n  const context = init_context(allowable_tags, tag_replacement);\n\n  return striptags_internal(html, context);\n}\n\nfunction init_striptags_stream(allowable_tags, tag_replacement) {\n  allowable_tags = allowable_tags || [];\n  tag_replacement = tag_replacement || '';\n\n  const context = init_context(allowable_tags, tag_replacement);\n\n  return function striptags_stream(html) {\n    return striptags_internal(html || '', context);\n  };\n}\n\nstriptags.init_streaming_mode = init_striptags_stream;\n\nfunction init_context(allowable_tags, tag_replacement) {\n  allowable_tags = parse_allowable_tags(allowable_tags);\n\n  return {\n    allowable_tags: allowable_tags,\n    tag_replacement: tag_replacement,\n\n    state: STATE_PLAINTEXT,\n    tag_buffer: '',\n    depth: 0,\n    in_quote_char: '',\n  };\n}\n\nfunction striptags_internal(html, context) {\n  const allowable_tags = context.allowable_tags;\n  const tag_replacement = context.tag_replacement;\n\n  let state = context.state;\n  let tag_buffer = context.tag_buffer;\n  let depth = context.depth;\n  let in_quote_char = context.in_quote_char;\n  let output = '';\n\n  for (let idx = 0, length = html.length; idx < length; idx++) {\n    const char = html[idx];\n\n    if (state === STATE_PLAINTEXT) {\n      switch (char) {\n        case '<':\n          state = STATE_HTML;\n          tag_buffer += char;\n          break;\n\n        default:\n          output += char;\n          break;\n      }\n    } else if (state === STATE_HTML) {\n      switch (char) {\n        case '<':\n          // ignore '<' if inside a quote\n          if (in_quote_char) {\n            break;\n          }\n\n          // we're seeing a nested '<'\n          depth++;\n          break;\n\n        case '>':\n          // ignore '>' if inside a quote\n          if (in_quote_char) {\n            break;\n          }\n\n          // something like this is happening: '<<>>'\n          if (depth) {\n            depth--;\n\n            break;\n          }\n\n          // this is closing the tag in tag_buffer\n          in_quote_char = '';\n          state = STATE_PLAINTEXT;\n          tag_buffer += '>';\n\n          if (allowable_tags.has(normalize_tag(tag_buffer))) {\n            output += tag_buffer;\n          } else {\n            output += tag_replacement;\n          }\n\n          tag_buffer = '';\n          break;\n\n        case '\"':\n        case \"'\":\n          // catch both single and double quotes\n\n          if (char === in_quote_char) {\n            in_quote_char = '';\n          } else {\n            in_quote_char = in_quote_char || char;\n          }\n\n          tag_buffer += char;\n          break;\n\n        case '-':\n          if (tag_buffer === '<!-') {\n            state = STATE_COMMENT;\n          }\n\n          tag_buffer += char;\n          break;\n\n        case ' ':\n        case '\\n':\n          if (tag_buffer === '<') {\n            state = STATE_PLAINTEXT;\n            output += '< ';\n            tag_buffer = '';\n\n            break;\n          }\n\n          tag_buffer += char;\n          break;\n\n        default:\n          tag_buffer += char;\n          break;\n      }\n    } else if (state === STATE_COMMENT) {\n      switch (char) {\n        case '>':\n          if (tag_buffer.slice(-2) == '--') {\n            // close the comment\n            state = STATE_PLAINTEXT;\n          }\n\n          tag_buffer = '';\n          break;\n\n        default:\n          tag_buffer += char;\n          break;\n      }\n    }\n  }\n\n  // save the context for future iterations\n  context.state = state;\n  context.tag_buffer = tag_buffer;\n  context.depth = depth;\n  context.in_quote_char = in_quote_char;\n\n  return output;\n}\n\nfunction parse_allowable_tags(allowable_tags) {\n  let tag_set = new Set();\n\n  if (typeof allowable_tags === 'string') {\n    let match;\n\n    while ((match = ALLOWED_TAGS_REGEX.exec(allowable_tags))) {\n      tag_set.add(match[1]);\n    }\n  } else if (!Symbol.nonNative && typeof allowable_tags[Symbol.iterator] === 'function') {\n    tag_set = new Set(allowable_tags);\n  } else if (typeof allowable_tags.forEach === 'function') {\n    // IE11 compatible\n    allowable_tags.forEach(tag_set.add, tag_set);\n  }\n\n  return tag_set;\n}\n\nfunction normalize_tag(tag_buffer) {\n  const match = NORMALIZE_TAG_REGEX.exec(tag_buffer);\n\n  return match ? match[1].toLowerCase() : null;\n}\n\nexport default striptags;\n"],"mappings":"AAwBA,YAAY,CAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,OAAA,wBAAAC,WAAA,QAAAC,oBAAA,eAAAA,oBAAA,CAAAD,WAAA,CAAAE,SAAA,CAAAF,WAAA,EAAAA,WAAA,CAAAG,MAAA,UAAAC,aAAA,QAAAH,oBAAA,eAAAA,oBAAA,CAAAF,OAAA,CAAAM,SAAA,UAAAC,CAAA,SAAAA,CAAA,EAEb,KAAM,CAAAC,eAAe,CAAGC,MAAM,CAAC,WAAW,CAAC,CAC3C,KAAM,CAAAC,UAAU,CAAGD,MAAM,CAAC,MAAM,CAAC,CACjC,KAAM,CAAAE,aAAa,CAAGF,MAAM,CAAC,SAAS,CAAC,CAEvC,KAAM,CAAAG,kBAAkB,CAAG,UAAU,CACrC,KAAM,CAAAC,mBAAmB,CAAG,iBAAiB,CAE7C,QAAS,CAAAC,SAASA,CAACC,IAAI,CAAEC,cAAc,CAAEC,eAAe,CAAE,CACxDF,IAAI,CAAGA,IAAI,EAAI,EAAE,CACjBC,cAAc,CAAGA,cAAc,EAAI,EAAE,CACrCC,eAAe,CAAGA,eAAe,EAAI,EAAE,CAEvC,KAAM,CAAAC,OAAO,CAAGC,YAAY,CAACH,cAAc,CAAEC,eAAe,CAAC,CAE7D,MAAO,CAAAG,kBAAkB,CAACL,IAAI,CAAEG,OAAO,CACzC,CAEA,QAAS,CAAAG,qBAAqBA,CAACL,cAAc,CAAEC,eAAe,CAAE,CAC9DD,cAAc,CAAGA,cAAc,EAAI,EAAE,CACrCC,eAAe,CAAGA,eAAe,EAAI,EAAE,CAEvC,KAAM,CAAAC,OAAO,CAAGC,YAAY,CAACH,cAAc,CAAEC,eAAe,CAAC,CAE7D,MAAO,SAAS,CAAAK,gBAAgBA,CAACP,IAAI,CAAE,CACrC,MAAO,CAAAK,kBAAkB,CAACL,IAAI,EAAI,EAAE,CAAEG,OAAO,CAC/C,CACF,CAEAJ,SAAS,CAACS,mBAAmB,CAAGF,qBAAqB,CAErD,QAAS,CAAAF,YAAYA,CAACH,cAAc,CAAEC,eAAe,CAAE,CACrDD,cAAc,CAAGQ,oBAAoB,CAACR,cAAc,CAAC,CAErD,MAAO,CACLA,cAAc,CAAEA,cAAc,CAC9BC,eAAe,CAAEA,eAAe,CAEhCQ,KAAK,CAAEjB,eAAe,CACtBkB,UAAU,CAAE,EAAE,CACdC,KAAK,CAAE,CAAC,CACRC,aAAa,CAAE,EACjB,CACF,CAEA,QAAS,CAAAR,kBAAkBA,CAACL,IAAI,CAAEG,OAAO,CAAE,CACzC,KAAM,CAAAF,cAAc,CAAGE,OAAO,CAACF,cAAc,CAC7C,KAAM,CAAAC,eAAe,CAAGC,OAAO,CAACD,eAAe,CAE/C,GAAI,CAAAQ,KAAK,CAAGP,OAAO,CAACO,KAAK,CACzB,GAAI,CAAAC,UAAU,CAAGR,OAAO,CAACQ,UAAU,CACnC,GAAI,CAAAC,KAAK,CAAGT,OAAO,CAACS,KAAK,CACzB,GAAI,CAAAC,aAAa,CAAGV,OAAO,CAACU,aAAa,CACzC,GAAI,CAAAC,MAAM,CAAG,EAAE,CAEf,IAAK,GAAI,CAAAC,GAAG,CAAG,CAAC,CAAEC,MAAM,CAAGhB,IAAI,CAACgB,MAAM,CAAED,GAAG,CAAGC,MAAM,CAAED,GAAG,EAAE,CAAE,CAC3D,KAAM,CAAAE,IAAI,CAAGjB,IAAI,CAACe,GAAG,CAAC,CAEtB,GAAIL,KAAK,GAAKjB,eAAe,CAAE,CAC7B,OAAQwB,IAAI,EACV,IAAK,GAAG,CACNP,KAAK,CAAGf,UAAU,CAClBgB,UAAU,EAAIM,IAAI,CAClB,MAEF,QACEH,MAAM,EAAIG,IAAI,CACd,KACJ,CACF,CAAC,IAAM,IAAIP,KAAK,GAAKf,UAAU,CAAE,CAC/B,OAAQsB,IAAI,EACV,IAAK,GAAG,CAEN,GAAIJ,aAAa,CAAE,CACjB,KACF,CAGAD,KAAK,EAAE,CACP,MAEF,IAAK,GAAG,CAEN,GAAIC,aAAa,CAAE,CACjB,KACF,CAGA,GAAID,KAAK,CAAE,CACTA,KAAK,EAAE,CAEP,KACF,CAGAC,aAAa,CAAG,EAAE,CAClBH,KAAK,CAAGjB,eAAe,CACvBkB,UAAU,EAAI,GAAG,CAEjB,GAAIV,cAAc,CAACiB,GAAG,CAACC,aAAa,CAACR,UAAU,CAAC,CAAC,CAAE,CACjDG,MAAM,EAAIH,UACZ,CAAC,IAAM,CACLG,MAAM,EAAIZ,eACZ,CAEAS,UAAU,CAAG,EAAE,CACf,MAEF,IAAK,IAAG,CACR,IAAK,GAAG,CAGN,GAAIM,IAAI,GAAKJ,aAAa,CAAE,CAC1BA,aAAa,CAAG,EAClB,CAAC,IAAM,CACLA,aAAa,CAAGA,aAAa,EAAII,IACnC,CAEAN,UAAU,EAAIM,IAAI,CAClB,MAEF,IAAK,GAAG,CACN,GAAIN,UAAU,GAAK,KAAK,CAAE,CACxBD,KAAK,CAAGd,aACV,CAEAe,UAAU,EAAIM,IAAI,CAClB,MAEF,IAAK,GAAG,CACR,IAAK,IAAI,CACP,GAAIN,UAAU,GAAK,GAAG,CAAE,CACtBD,KAAK,CAAGjB,eAAe,CACvBqB,MAAM,EAAI,IAAI,CACdH,UAAU,CAAG,EAAE,CAEf,KACF,CAEAA,UAAU,EAAIM,IAAI,CAClB,MAEF,QACEN,UAAU,EAAIM,IAAI,CAClB,KACJ,CACF,CAAC,IAAM,IAAIP,KAAK,GAAKd,aAAa,CAAE,CAClC,OAAQqB,IAAI,EACV,IAAK,GAAG,CACN,GAAIN,UAAU,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,EAAI,IAAI,CAAE,CAEhCV,KAAK,CAAGjB,eACV,CAEAkB,UAAU,CAAG,EAAE,CACf,MAEF,QACEA,UAAU,EAAIM,IAAI,CAClB,KACJ,CACF,CACF,CAGAd,OAAO,CAACO,KAAK,CAAGA,KAAK,CACrBP,OAAO,CAACQ,UAAU,CAAGA,UAAU,CAC/BR,OAAO,CAACS,KAAK,CAAGA,KAAK,CACrBT,OAAO,CAACU,aAAa,CAAGA,aAAa,CAErC,MAAO,CAAAC,MACT,CAEA,QAAS,CAAAL,oBAAoBA,CAACR,cAAc,CAAE,CAC5C,GAAI,CAAAoB,OAAO,CAAG,GAAI,CAAAC,GAAK,CAEvB,GAAI,MAAO,CAAArB,cAAc,GAAK,QAAQ,CAAE,CACtC,GAAI,CAAAsB,KAAK,CAET,MAAQA,KAAK,CAAG1B,kBAAkB,CAAC2B,IAAI,CAACvB,cAAc,CAAC,CAAG,CACxDoB,OAAO,CAACI,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CACtB,CACF,CAAC,IAAM,IAAI,CAAC7B,MAAM,CAACgC,SAAS,EAAI,MAAO,CAAAzB,cAAc,CAACP,MAAM,CAACiC,QAAQ,CAAC,GAAK,UAAU,CAAE,CACrFN,OAAO,CAAG,GAAI,CAAAC,GAAG,CAACrB,cAAc,CAClC,CAAC,IAAM,IAAI,MAAO,CAAAA,cAAc,CAAC2B,OAAO,GAAK,UAAU,CAAE,CAEvD3B,cAAc,CAAC2B,OAAO,CAACP,OAAO,CAACI,GAAG,CAAEJ,OAAO,CAC7C,CAEA,MAAO,CAAAA,OACT,CAEA,QAAS,CAAAF,aAAaA,CAACR,UAAU,CAAE,CACjC,KAAM,CAAAY,KAAK,CAAGzB,mBAAmB,CAAC0B,IAAI,CAACb,UAAU,CAAC,CAElD,MAAO,CAAAY,KAAK,CAAGA,KAAK,CAAC,CAAC,CAAC,CAACM,WAAW,CAAC,CAAC,CAAG,IAC1C,CAAC,MAAAC,QAAA,CAEc/B,SAAS,KAAAgC,SAAA,CAAAhD,OAAA,CAAAE,OAAA,CAAA6C,QAAA,kBAAAE,cAAA,QAAA7C,oBAAA,eAAAA,oBAAA,CAAAF,OAAA,CAAAG,SAAA,KAAA4C,cAAA,SAAAA,cAAA,CAAAC,QAAA,CArMlBxC,eAAe,0FAAAuC,cAAA,CAAAC,QAAA,CACftC,UAAU,qFAAAqC,cAAA,CAAAC,QAAA,CACVrC,aAAa,wFAAAoC,cAAA,CAAAC,QAAA,CAEbpC,kBAAkB,6FAAAmC,cAAA,CAAAC,QAAA,CAClBnC,mBAAmB,8FAAAkC,cAAA,CAAAC,QAAA,CAEhBlC,SAAS,oFAAAiC,cAAA,CAAAC,QAAA,CAUT3B,qBAAqB,gGAAA0B,cAAA,CAAAC,QAAA,CAarB7B,YAAY,uFAAA4B,cAAA,CAAAC,QAAA,CAcZ5B,kBAAkB,6FAAA2B,cAAA,CAAAC,QAAA,CAgIlBxB,oBAAoB,+FAAAuB,cAAA,CAAAC,QAAA,CAmBpBd,aAAa,wFAAAa,cAAA,CAAAC,QAAA,CAAAH,QAAA,uGAAAI,WAAA,QAAA/C,oBAAA,eAAAA,oBAAA,CAAA+C,WAAA,CAAA9C,SAAA,CAAA8C,WAAA,EAAAA,WAAA,CAAA7C,MAAA","ignoreList":[]}