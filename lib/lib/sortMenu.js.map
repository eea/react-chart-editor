{"version":3,"file":"sortMenu.js","names":["getUniqueValues","value","index","self","indexOf","sortAlphabetically","a","b","sortByGroup","props","group","sortByName","name","sortMenu","children","order","panelsStartIndex","panelsEndIndex","i","length","prePanelsChildren","slice","panels","postPanelsChildren","filter","desiredPanel","some","actualPanel","desiredGroupOrder","map","panel","sort","panelAHasGroupCustomOrder","includes","panelBHasGroupCustomOrder","indexOfGroupA","indexOfGroupB","desiredNameOrder","panelAHasNameCustomOrder","panelBHasNameCustomOrder","concat","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../src/lib/sortMenu.js"],"sourcesContent":["function getUniqueValues(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction sortAlphabetically(a, b) {\n  const sortByGroup = a.props.group === b.props.group ? 0 : a.props.group < b.props.group ? -1 : 1;\n  const sortByName = a.props.name === b.props.name ? 0 : a.props.name < b.props.name ? -1 : 1;\n  return sortByGroup || sortByName;\n}\n\nexport default function sortMenu(children, order) {\n  // Break out early if no order is provided\n  if (!order) {\n    return children;\n  }\n\n  // PART 1: only sorting panels (i.e. child with a group and name prop)\n  // and not other elements (like Buttons, or Logo)\n  let panelsStartIndex = null;\n  let panelsEndIndex = null;\n  for (let i = 0; i < children.length; i++) {\n    if (children[i].props.group && children[i].props.name && !panelsStartIndex) {\n      panelsStartIndex = i;\n      break;\n    }\n  }\n  for (let i = panelsStartIndex; i < children.length; i++) {\n    if (!children[i].props.group && !children[i].props.name && !panelsEndIndex) {\n      panelsEndIndex = i - 1;\n      break;\n    } else if (i === children.length - 1) {\n      panelsEndIndex = i;\n    }\n  }\n\n  const prePanelsChildren = panelsStartIndex === 0 ? [] : children.slice(0, panelsStartIndex);\n  const panels =\n    panelsStartIndex !== panelsEndIndex ? children.slice(panelsStartIndex, panelsEndIndex + 1) : [];\n  const postPanelsChildren =\n    panelsEndIndex === children.length ? [] : children.slice(panelsEndIndex + 1);\n\n  // PART 2: validate order prop, if a desired panel specified in order, matches no actual panel rendered\n  // in the panels array, it is excluded from ordering considerations\n  // eslint-disable-next-line\n  order = order.filter((desiredPanel) =>\n    panels.some(\n      (actualPanel) =>\n        actualPanel.props.name === desiredPanel.name &&\n        actualPanel.props.group === desiredPanel.group\n    )\n  );\n\n  const desiredGroupOrder = order.map((panel) => panel.group).filter(getUniqueValues);\n\n  // PART 3: Sort panels\n  panels.sort((a, b) => {\n    const panelAHasGroupCustomOrder = desiredGroupOrder.includes(a.props.group);\n    const panelBHasGroupCustomOrder = desiredGroupOrder.includes(b.props.group);\n\n    // if one of the elements is not in the desiredGroupOrder array, then it goes to the end of the list\n    if (panelAHasGroupCustomOrder && !panelBHasGroupCustomOrder) {\n      return -1;\n    }\n    if (!panelAHasGroupCustomOrder && panelBHasGroupCustomOrder) {\n      return 1;\n    }\n\n    // if both elements are not in the desiredGroupOrder array, they get sorted alphabetically,\n    // by group, then by name\n    if (!panelAHasGroupCustomOrder && !panelBHasGroupCustomOrder) {\n      return sortAlphabetically(a, b);\n    }\n\n    // if both elements are in the desiredGroupOrder array, they get sorted according to their order in\n    // the desiredGroupOrder, then desiredNameOrder arrays.\n    if (panelAHasGroupCustomOrder && panelBHasGroupCustomOrder) {\n      const indexOfGroupA = desiredGroupOrder.indexOf(a.props.group);\n      const indexOfGroupB = desiredGroupOrder.indexOf(b.props.group);\n\n      if (indexOfGroupA < indexOfGroupB) {\n        return -1;\n      }\n\n      if (indexOfGroupA > indexOfGroupB) {\n        return 1;\n      }\n\n      if (indexOfGroupA === indexOfGroupB) {\n        // Since Subpanels names can be reused in different groups\n        // we compute desired order here to get the desired index right.\n        // We are filtering on unique values, just in case, even if we don't\n        // have to because within a given group we'd assume that there will be\n        // no 2 subpanels named the same.\n        const desiredNameOrder = order\n          .filter((panel) => panel.group === a.props.group)\n          .map((panel) => panel.name)\n          .filter(getUniqueValues);\n\n        const panelAHasNameCustomOrder = desiredNameOrder.includes(a.props.name);\n        const panelBHasNameCustomOrder = desiredNameOrder.includes(b.props.name);\n\n        if (!panelAHasNameCustomOrder || !panelBHasNameCustomOrder) {\n          if (panelAHasNameCustomOrder && !panelBHasNameCustomOrder) {\n            return -1;\n          }\n          if (!panelAHasNameCustomOrder && panelBHasNameCustomOrder) {\n            return 1;\n          }\n          if (!panelAHasNameCustomOrder && !panelBHasNameCustomOrder) {\n            return sortAlphabetically(a, b);\n          }\n        }\n\n        if (panelAHasNameCustomOrder && panelBHasNameCustomOrder) {\n          return desiredNameOrder.indexOf(a.props.name) - desiredNameOrder.indexOf(b.props.name);\n        }\n      }\n    }\n    return 0;\n  });\n\n  // PART 4: Return all children\n  return prePanelsChildren.concat(panels).concat(postPanelsChildren);\n}\n"],"mappings":"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","ignoreList":[]}