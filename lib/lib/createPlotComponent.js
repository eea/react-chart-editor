"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=createPlotComponent;var _react=_interopRequireWildcard(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _plotly=_interopRequireDefault(require("plotly.js/dist/plotly"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(function(){var enterModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.enterModule:undefined;enterModule&&enterModule(module)})();var __signature__=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default.signature:function(a){return a};var eventNames=["AfterExport","AfterPlot","Animated","AnimatingFrame","AnimationInterrupted","AutoSize","BeforeExport","BeforeHover","ButtonClicked","Click","ClickAnnotation","Deselect","DoubleClick","Framework","Hover","LegendClick","LegendDoubleClick","Relayout","Relayouting","Restyle","Redraw","Selected","Selecting","SliderChange","SliderEnd","SliderStart","SunburstClick","Transitioning","TransitionInterrupted","Unhover","WebGlContextLost"];var updateEvents=["plotly_restyle","plotly_redraw","plotly_relayout","plotly_relayouting","plotly_doubleclick","plotly_animated","plotly_sunburstclick"];function createPlotComponent(){var Plotly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_plotly.default;class PlotlyComponent extends _react.Component{constructor(props){super(props);this.p=Promise.resolve();this.resizeHandler=null;this.handlers={};this.isBrowser=typeof window!=="undefined";this.syncWindowResize=this.syncWindowResize.bind(this);this.syncEventHandlers=this.syncEventHandlers.bind(this);this.attachUpdateEvents=this.attachUpdateEvents.bind(this);this.getRef=this.getRef.bind(this);this.handleUpdate=this.handleUpdate.bind(this);this.figureCallback=this.figureCallback.bind(this);this.updatePlotly=this.updatePlotly.bind(this)}updatePlotly(shouldInvokeResizeHandler,figureCallbackFunction,shouldAttachUpdateEvents){this.p=this.p.then(()=>{if(this.unmounting){return}if(!this.el){throw new Error("Missing element reference")}return Plotly.react(this.el,{data:this.props.data,layout:this.props.layout,config:this.props.config,frames:this.props.frames})}).then(()=>{if(this.unmounting){return}this.syncWindowResize(shouldInvokeResizeHandler);this.syncEventHandlers();this.figureCallback(figureCallbackFunction);if(shouldAttachUpdateEvents){this.attachUpdateEvents()}}).catch(err=>{if(this.props.onError){this.props.onError(err)}})}componentDidMount(){this.unmounting=false;this.updatePlotly(true,this.props.onInitialized,true)}componentDidUpdate(prevProps){this.unmounting=false;var numPrevFrames=prevProps.frames&&prevProps.frames.length?prevProps.frames.length:0;var numNextFrames=this.props.frames&&this.props.frames.length?this.props.frames.length:0;var figureChanged=!(prevProps.layout===this.props.layout&&prevProps.data===this.props.data&&prevProps.config===this.props.config&&numNextFrames===numPrevFrames);var revisionDefined=prevProps.revision!==void 0;var revisionChanged=prevProps.revision!==this.props.revision;if(!figureChanged&&(!revisionDefined||revisionDefined&&!revisionChanged)){return}this.updatePlotly(false,this.props.onUpdate,false)}componentWillUnmount(){this.unmounting=true;this.figureCallback(this.props.onPurge);if(this.resizeHandler&&this.isBrowser){window.removeEventListener("resize",this.resizeHandler);this.resizeHandler=null}this.removeUpdateEvents();Plotly.purge(this.el)}attachUpdateEvents(){if(!this.el||!this.el.removeListener){return}updateEvents.forEach(updateEvent=>{this.el.on(updateEvent,this.handleUpdate)})}removeUpdateEvents(){if(!this.el||!this.el.removeListener){return}updateEvents.forEach(updateEvent=>{this.el.removeListener(updateEvent,this.handleUpdate)})}handleUpdate(){this.figureCallback(this.props.onUpdate)}figureCallback(callback){if(typeof callback==="function"){var{data,layout}=this.el;var frames=this.el._transitionData?this.el._transitionData._frames:null;var figure={data,layout,frames};callback(figure,this.el)}}syncWindowResize(invoke){if(!this.isBrowser){return}if(this.props.useResizeHandler&&!this.resizeHandler){this.resizeHandler=()=>Plotly.Plots.resize(this.el);window.addEventListener("resize",this.resizeHandler);if(invoke){this.resizeHandler()}}else if(!this.props.useResizeHandler&&this.resizeHandler){window.removeEventListener("resize",this.resizeHandler);this.resizeHandler=null}}getRef(el){this.el=el;if(this.props.debug&&this.isBrowser){window.gd=this.el}}syncEventHandlers(){eventNames.forEach(eventName=>{var prop=this.props["on"+eventName];var handler=this.handlers[eventName];var hasHandler=Boolean(handler);if(prop&&!hasHandler){this.addEventHandler(eventName,prop)}else if(!prop&&hasHandler){this.removeEventHandler(eventName)}else if(prop&&hasHandler&&prop!==handler){this.removeEventHandler(eventName);this.addEventHandler(eventName,prop)}})}addEventHandler(eventName,prop){this.handlers[eventName]=prop;this.el.on(this.getPlotlyEventName(eventName),this.handlers[eventName])}removeEventHandler(eventName){this.el.removeListener(this.getPlotlyEventName(eventName),this.handlers[eventName]);delete this.handlers[eventName]}getPlotlyEventName(eventName){return"plotly_"+eventName.toLowerCase()}render(){return _react.default.createElement("div",{id:this.props.divId,style:this.props.style,ref:this.getRef,className:this.props.className})}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}PlotlyComponent.propTypes={data:_propTypes.default.arrayOf(_propTypes.default.object),config:_propTypes.default.object,layout:_propTypes.default.object,frames:_propTypes.default.arrayOf(_propTypes.default.object),revision:_propTypes.default.number,onInitialized:_propTypes.default.func,onPurge:_propTypes.default.func,onError:_propTypes.default.func,onUpdate:_propTypes.default.func,debug:_propTypes.default.bool,style:_propTypes.default.object,className:_propTypes.default.string,useResizeHandler:_propTypes.default.bool,divId:_propTypes.default.string};eventNames.forEach(eventName=>{PlotlyComponent.propTypes["on"+eventName]=_propTypes.default.func});PlotlyComponent.defaultProps={debug:false,useResizeHandler:false,data:[],style:{position:"relative",display:"inline-block"}};return PlotlyComponent};(function(){var reactHotLoader=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default:undefined;if(!reactHotLoader){return}reactHotLoader.register(eventNames,"eventNames","/Users/razvan/Work/react-chart-editor/src/lib/createPlotComponent.js");reactHotLoader.register(updateEvents,"updateEvents","/Users/razvan/Work/react-chart-editor/src/lib/createPlotComponent.js");reactHotLoader.register(createPlotComponent,"createPlotComponent","/Users/razvan/Work/react-chart-editor/src/lib/createPlotComponent.js")})();;(function(){var leaveModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.leaveModule:undefined;leaveModule&&leaveModule(module)})();
//# sourceMappingURL=createPlotComponent.js.map