{"version":3,"file":"dereference.js","names":["_walkObject","_interopRequireDefault","require","_index","e","__esModule","default","enterModule","reactHotLoaderGlobal","undefined","module","__signature__","signature","a","SRC_ATTR_PATTERN","getColumnNames","srcArray","dataSourceOptions","map","src","columns","filter","dso","value","length","columnName","label","join","dereference","container","dataSources","config","arguments","deleteKeys","containerIsData","Array","isArray","replacer","key","parent","srcPath","test","dataKey","replace","srcRef","toSrc","dereferencedData","ref","type","meta","columnNames","maybeTransposeData","walkObject","walkArraysMatchingKeys","pathType","reactHotLoader","register","leaveModule"],"sources":["../../src/lib/dereference.js"],"sourcesContent":["import walkObject from './walkObject';\nimport {maybeTransposeData} from './index';\n\nconst SRC_ATTR_PATTERN = /src$/;\n\nexport function getColumnNames(srcArray, dataSourceOptions) {\n  return srcArray\n    .map((src) => {\n      const columns = dataSourceOptions.filter((dso) => dso.value === src);\n      if (columns.length === 1) {\n        return columns[0].columnName || columns[0].label;\n      }\n      return '';\n    })\n    .join(' - ');\n}\n\nexport default function dereference(\n  container,\n  dataSources,\n  config = {deleteKeys: false},\n  dataSourceOptions = null\n) {\n  const containerIsData = Array.isArray(container);\n\n  const replacer = (key, parent, srcPath) => {\n    if (!SRC_ATTR_PATTERN.test(key)) {\n      return;\n    }\n\n    const dataKey = key.replace(SRC_ATTR_PATTERN, '');\n\n    let srcRef = config.toSrc ? config.toSrc(parent[key]) : parent[key];\n\n    // making this into an array to more easily lookup 1d and 2d srcs in dataSourceOptions\n    if (!Array.isArray(srcRef)) {\n      srcRef = [srcRef];\n    }\n\n    let dereferencedData = srcRef.map((ref) => {\n      if (config.deleteKeys && !(ref in dataSources)) {\n        delete parent[dataKey];\n        delete parent[dataKey + 'src'];\n      }\n      return dataSources[ref];\n    });\n\n    // remove extra data wrapping\n    if (srcRef.length === 1) {\n      dereferencedData = dereferencedData[0];\n    }\n\n    if (!Array.isArray(dereferencedData)) {\n      return;\n    }\n\n    if (containerIsData) {\n      if (parent.type !== null) {\n        // we're at the top level of the trace\n        if (dataSourceOptions !== null) {\n          parent.meta = parent.meta || {};\n          parent.meta.columnNames = parent.meta.columnNames || {};\n          parent.meta.columnNames[dataKey] = getColumnNames(srcRef, dataSourceOptions);\n        }\n        parent[dataKey] = maybeTransposeData(dereferencedData, srcPath, parent.type);\n      } else {\n        parent[dataKey] = dereferencedData;\n      }\n    } else {\n      // container is layout\n      parent[dataKey] = dereferencedData;\n    }\n  };\n\n  if (containerIsData) {\n    walkObject(container, replacer, {\n      walkArraysMatchingKeys: ['data', 'transforms'],\n      pathType: 'nestedProperty',\n    });\n  } else {\n    // container is layout\n    walkObject(container, replacer, {pathType: 'nestedProperty'});\n  }\n}\n"],"mappings":"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","ignoreList":[]}