"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.computeCustomConfigVisibility=computeCustomConfigVisibility;exports.default=unpackPlotProps;exports.hasValidCustomConfigVisibilityRules=hasValidCustomConfigVisibilityRules;exports.isVisibleGivenCustomConfig=isVisibleGivenCustomConfig;var _nested_property=_interopRequireDefault(require("plotly.js/src/lib/nested_property"));var _fastIsnumeric=_interopRequireDefault(require("fast-isnumeric"));var _constants=require("./constants");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(function(){var enterModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.enterModule:undefined;enterModule&&enterModule(module)})();var __signature__=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default.signature:function(a){return a};var hasFullValue=fullValue=>fullValue!==void 0&&fullValue!==null;function hasValidCustomConfigVisibilityRules(customConfig){if(customConfig&&customConfig===Object(customConfig)&&Object.keys(customConfig).length&&customConfig.visibility_rules){if(customConfig.visibility_rules.blacklist&&customConfig.visibility_rules.whitelist){console.error("customConfig.visibility_rules can have a blacklist OR whitelist key, both are present in your config.");return false}if(!Object.keys(customConfig.visibility_rules).some(key=>["blacklist","whitelist"].includes(key))){console.error("customConfig.visibility_rules must have at least a blacklist or whitelist key.");return false}var isValidRule=rule=>{if(rule.exceptions){return rule.exceptions.every(isValidRule)}return rule.type&&["attrName","controlType"].includes(rule.type)&&rule.regex_match};var errorMessage="All rules and exceptions must have a type (one of: 'attrName' or 'controlType') and regex_match key.";if(customConfig.visibility_rules.blacklist&&!customConfig.visibility_rules.blacklist.every(isValidRule)){console.error(errorMessage);return false}if(customConfig.visibility_rules.whitelist&&!customConfig.visibility_rules.whitelist.every(isValidRule)){console.error(errorMessage);return false}return true}return false}function computeCustomConfigVisibility(props,customConfig,wrappedComponentDisplayName){var isVisible;var isRegexMatch=rule=>{var stringToTest=rule.type==="attrName"?props.attr:wrappedComponentDisplayName;return RegExp(rule.regex_match).test(stringToTest)};var passesTest=rule=>{var hasException=rule=>{if(rule.exceptions){return rule.exceptions.some(exception=>passesTest(exception))}return false};return isRegexMatch(rule)&&!hasException(rule)};if(customConfig.visibility_rules.blacklist){isVisible=!customConfig.visibility_rules.blacklist.some(passesTest)}if(customConfig.visibility_rules.whitelist){isVisible=customConfig.visibility_rules.whitelist.some(passesTest)}return isVisible}function isVisibleGivenCustomConfig(initial,nextProps,nextContext,componentDisplayName){var show=initial;if(show&&nextContext.hasValidCustomConfigVisibilityRules){show=computeCustomConfigVisibility(nextProps,nextContext.customConfig,componentDisplayName)}return show}function unpackPlotProps(props,context){var container=context.container,getValObject=context.getValObject,defaultContainer=context.defaultContainer,updateContainer=context.updateContainer;if(!props.attr){return{}}var attrMeta;if(getValObject){attrMeta=context.getValObject(props.attr)||{}}var fullContainer=context.fullContainer;var fullProperty=(0,_nested_property.default)(fullContainer,props.attr);var fullValue=fullProperty.get();var multiValued=false;if(fullValue===_constants.MULTI_VALUED){fullValue=_constants.MULTI_VALUED_PLACEHOLDER;multiValued=true}var isVisible=Boolean(hasFullValue(fullValue)||props.show);var defaultValue=props.defaultValue;if(defaultValue===void 0&&defaultContainer){defaultValue=(0,_nested_property.default)(defaultContainer,props.attr).get()}var min,max,description;if(attrMeta){if((0,_fastIsnumeric.default)(attrMeta.max)){max=attrMeta.max}if((0,_fastIsnumeric.default)(attrMeta.min)){min=attrMeta.min}description=attrMeta.description}var updatePlot=v=>{if(updateContainer){updateContainer({[props.attr]:v})}};return{attrMeta,container,defaultValue,fullContainer,fullValue,getValObject,isVisible,max,min,description,multiValued,updateContainer,updatePlot}};(function(){var reactHotLoader=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default:undefined;if(!reactHotLoader){return}reactHotLoader.register(hasFullValue,"hasFullValue","/Users/razvan/Work/react-chart-editor/src/lib/unpackPlotProps.js");reactHotLoader.register(hasValidCustomConfigVisibilityRules,"hasValidCustomConfigVisibilityRules","/Users/razvan/Work/react-chart-editor/src/lib/unpackPlotProps.js");reactHotLoader.register(computeCustomConfigVisibility,"computeCustomConfigVisibility","/Users/razvan/Work/react-chart-editor/src/lib/unpackPlotProps.js");reactHotLoader.register(isVisibleGivenCustomConfig,"isVisibleGivenCustomConfig","/Users/razvan/Work/react-chart-editor/src/lib/unpackPlotProps.js");reactHotLoader.register(unpackPlotProps,"unpackPlotProps","/Users/razvan/Work/react-chart-editor/src/lib/unpackPlotProps.js")})();;(function(){var leaveModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.leaveModule:undefined;leaveModule&&leaveModule(module)})();
//# sourceMappingURL=unpackPlotProps.js.map