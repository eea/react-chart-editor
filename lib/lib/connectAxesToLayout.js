"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=connectAxesToLayout;var _react=_interopRequireWildcard(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _nested_property=_interopRequireDefault(require("plotly.js/src/lib/nested_property"));var _multiValues=require("./multiValues");var _lib=require("../lib");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(function(){var enterModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.enterModule:undefined;enterModule&&enterModule(module)})();function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var __signature__=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default.signature:function(a){return a};function computeAxesOptions(axes,props,context){var _=context.localize;var filteredAxes=axes;if(props.axisFilter){filteredAxes=axes.filter(props.axisFilter)}var options=[];for(var i=0;i<filteredAxes.length;i++){var ax=filteredAxes[i];var label=(0,_lib.capitalize)(ax._name.split("axis")[0]);var value=(ax._subplot&&!ax._subplot.includes("xaxis")&&!ax._subplot.includes("yaxis")?ax._subplot+"."+ax._name:ax._subplot).trim();options[i]={label,value,axisGroup:ax._axisGroup,title:(0,_lib.getAxisTitle)(ax)}}return options.length>1?[{label:_("All"),value:"allaxes"}].concat(options):options}function connectAxesToLayout(WrappedComponent){class AxesConnectedComponent extends _react.Component{constructor(props,context){super(props,context);this.axes=(0,_lib.getAllAxes)(context.fullContainer);this.axesOptions=computeAxesOptions(this.axes,props,context);var defaultAxesTarget=null;if(this.axesOptions.length===1){defaultAxesTarget=this.axesOptions[0].value}if(this.axesOptions.length>1){defaultAxesTarget=this.axesOptions[1].value}this.state={axesTarget:defaultAxesTarget};this.axesTargetHandler=this.axesTargetHandler.bind(this);this.updateContainer=this.updateContainer.bind(this);this.setLocals(props,this.state,context)}UNSAFE_componentWillUpdate(nextProps,nextState,nextContext){this.axes=(0,_lib.getAllAxes)(nextContext.fullContainer);this.axesOptions=computeAxesOptions(this.axes,nextProps,nextContext);this.setLocals(nextProps,nextState,nextContext)}setLocals(nextProps,nextState,nextContext){var{container,fullContainer}=nextContext;var{axesTarget}=nextState;if(axesTarget==="allaxes"){var multiValuedContainer=(0,_multiValues.deepCopyPublic)(this.axes[0]);this.axes.slice(1).forEach(ax=>Object.keys(ax).forEach(key=>(0,_multiValues.setMultiValuedContainer)(multiValuedContainer,(0,_multiValues.deepCopyPublic)(ax),key,{searchArrays:true})));this.fullContainer=multiValuedContainer;this.defaultContainer=this.axes[0];this.container={}}else if(axesTarget){this.fullContainer=(0,_nested_property.default)(fullContainer,axesTarget).get();this.container=this.container=(0,_nested_property.default)(container,axesTarget).get()||{}}}getChildContext(){var{dfltGraphDiv}=this.context;return{getDflt:attr=>{var _nestedProperty$get,_dfltGraphDiv$_fullLa;var axesTarget=this.state.axesTarget;return(_nestedProperty$get=(0,_nested_property.default)(((_dfltGraphDiv$_fullLa=dfltGraphDiv._fullLayout[axesTarget])===null||_dfltGraphDiv$_fullLa===void 0?void 0:_dfltGraphDiv$_fullLa._template)||{},attr).get())!==null&&_nestedProperty$get!==void 0?_nestedProperty$get:(0,_nested_property.default)(dfltGraphDiv._fullLayout[axesTarget]||{},attr).get()},getValObject:attr=>!this.context.getValObject?null:this.context.getValObject("".concat(this.state.axesTarget,".").concat(attr)),axesOptions:this.axesOptions,axesTarget:this.state.axesTarget,axesTargetHandler:this.axesTargetHandler,container:this.container,defaultContainer:this.defaultContainer,fullContainer:this.fullContainer,updateContainer:this.updateContainer}}axesTargetHandler(axesTarget){this.setState({axesTarget})}updateContainer(update){var newUpdate={};var{axesTarget}=this.state;var axes=this.axes;if(axesTarget!=="allaxes"){axes=[this.fullContainer]}var keys=Object.keys(update);for(var i=0;i<keys.length;i++){for(var j=0;j<axes.length;j++){var subplot=axes[j]._subplot;var axesKey=axes[j]._name;if(subplot&&!subplot.includes("xaxis")&&!subplot.includes("yaxis")){axesKey="".concat(subplot,".").concat(axesKey)}var newkey="".concat(axesKey,".").concat(keys[i]);newUpdate[newkey]=update[keys[i]]}}this.context.updateContainer(newUpdate)}render(){return _react.default.createElement(WrappedComponent,_extends({},this.props,{options:this.axesOptions}))}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}AxesConnectedComponent.displayName="AxesConnected".concat((0,_lib.getDisplayName)(WrappedComponent));AxesConnectedComponent.contextTypes={container:_propTypes.default.object.isRequired,fullContainer:_propTypes.default.object.isRequired,updateContainer:_propTypes.default.func,localize:_propTypes.default.func,getValObject:_propTypes.default.func,dfltGraphDiv:_propTypes.default.any};AxesConnectedComponent.childContextTypes={axesOptions:_propTypes.default.array,axesTarget:_propTypes.default.string,axesTargetHandler:_propTypes.default.func,container:_propTypes.default.object,defaultContainer:_propTypes.default.object,fullContainer:_propTypes.default.object,updateContainer:_propTypes.default.func,getDflt:_propTypes.default.func,getValObject:_propTypes.default.func};var{plotly_editor_traits}=WrappedComponent;AxesConnectedComponent.plotly_editor_traits=plotly_editor_traits;return AxesConnectedComponent};(function(){var reactHotLoader=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default:undefined;if(!reactHotLoader){return}reactHotLoader.register(computeAxesOptions,"computeAxesOptions","/Users/razvan/Work/react-chart-editor/src/lib/connectAxesToLayout.js");reactHotLoader.register(connectAxesToLayout,"connectAxesToLayout","/Users/razvan/Work/react-chart-editor/src/lib/connectAxesToLayout.js")})();;(function(){var leaveModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.leaveModule:undefined;leaveModule&&leaveModule(module)})();
//# sourceMappingURL=connectAxesToLayout.js.map