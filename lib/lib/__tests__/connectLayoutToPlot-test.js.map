{"version":3,"file":"connectLayoutToPlot-test.js","names":["_NumericInput","_interopRequireDefault","require","_react","_connectLayoutToPlot","_containers","_fields","_testUtils","_enzyme","e","__esModule","default","enterModule","reactHotLoaderGlobal","undefined","module","_extends","Object","assign","bind","n","arguments","length","t","r","hasOwnProperty","call","apply","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","__signature__","signature","a","Layouts","PlotlyPanel","PlotlyFold","PlotlySection","map","connectLayoutToPlot","Editor","props","createElement","TestEditor","plotly","onUpdate","jest","fn","Layout","describe","concat","displayName","it","wrapper","mount","fixtures","scatter","layout","height","Numeric","label","step","attr","find","NumericInput","expect","prop","toBe","beforeUpdateLayout","heightUpdate","payload","mock","calls","toEqual","update","expectedMin","expectedMax","reactHotLoader","register","leaveModule"],"sources":["../../../src/lib/__tests__/connectLayoutToPlot-test.js"],"sourcesContent":["import NumericInput from '../../components/widgets/NumericInput';\nimport React from 'react';\nimport connectLayoutToPlot from '../connectLayoutToPlot';\nimport {PlotlyFold, PlotlyPanel, PlotlySection} from '../../components/containers';\nimport {Numeric} from '../../components/fields';\nimport {TestEditor, fixtures, plotly} from '../test-utils';\nimport {mount} from 'enzyme';\n\nconst Layouts = [PlotlyPanel, PlotlyFold, PlotlySection].map(connectLayoutToPlot);\nconst Editor = (props) => <TestEditor {...{plotly, onUpdate: jest.fn(), ...props}} />;\n\nLayouts.forEach((Layout) => {\n  describe(`<${Layout.displayName}>`, () => {\n    it(`wraps container with fullValue pointing to gd._fullLayout`, () => {\n      const wrapper = mount(\n        <Editor {...fixtures.scatter({layout: {height: 100}})}>\n          <PlotlyPanel>\n            <Layout>\n              <Numeric label=\"Height\" step={10} attr=\"height\" />\n            </Layout>\n          </PlotlyPanel>\n        </Editor>\n      )\n        .find('[attr=\"height\"]')\n        .find(NumericInput);\n\n      expect(wrapper.prop('value')).toBe(100);\n    });\n\n    it(`sends updates to gd._layout`, () => {\n      const beforeUpdateLayout = jest.fn();\n      const wrapper = mount(\n        <Editor\n          beforeUpdateLayout={beforeUpdateLayout}\n          {...fixtures.scatter({layout: {height: 100}})}\n        >\n          <PlotlyPanel>\n            <Layout>\n              <Numeric label=\"Height\" step={10} attr=\"height\" />\n            </Layout>\n          </PlotlyPanel>\n        </Editor>\n      )\n        .find('[attr=\"height\"]')\n        .find(NumericInput);\n\n      const heightUpdate = 200;\n      wrapper.prop('onChange')(heightUpdate);\n      const payload = beforeUpdateLayout.mock.calls[0][0];\n      expect(payload).toEqual({update: {height: heightUpdate}});\n    });\n\n    it(`automatically computes min and max defaults`, () => {\n      const onUpdate = jest.fn();\n      const wrapper = mount(\n        <Editor onUpdate={onUpdate} {...fixtures.scatter()}>\n          <PlotlyPanel>\n            <Layout>\n              <Numeric label=\"Position x\" step={0.01} attr=\"title.x\" />\n            </Layout>\n          </PlotlyPanel>\n        </Editor>\n      )\n        .find('[attr=\"title.x\"]')\n        .find(NumericInput);\n\n      const expectedMin = 0;\n      const expectedMax = 1;\n      expect(wrapper.prop('min')).toBe(expectedMin);\n      expect(wrapper.prop('max')).toBe(expectedMax);\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}