{"version":3,"file":"maybeTransposeData-test.js","names":["_index","require","__signature__","reactHotLoaderGlobal","default","signature","a","describe","it","transposed","maybeTransposeData","expect","length","toBe","Array","isArray"],"sources":["../../../src/lib/__tests__/maybeTransposeData-test.js"],"sourcesContent":["import {maybeTransposeData} from '../index';\n/* eslint-disable no-magic-numbers */\ndescribe('maybeTransposeData', () => {\n  it('transposes 2d data for row based traceTypes', () => {\n    const transposed = maybeTransposeData(\n      [\n        [1, 2, 3],\n        [4, 5, 6],\n      ],\n      'zsrc',\n      'heatmap'\n    );\n\n    // [[1, 4], [2, 5], [3, 6]]\n    expect(transposed.length).toBe(3);\n  });\n\n  it('transposes 1d data for row based traceTypes', () => {\n    const transposed = maybeTransposeData([1, 2, 3], 'zsrc', 'heatmap');\n\n    // [[1], [2], [3]]\n    expect(transposed.length).toBe(3);\n  });\n\n  it('does not transpose data for column based traceTypes', () => {\n    const transposed = maybeTransposeData(\n      [\n        [1, 2, 3],\n        [4, 5, 6],\n      ],\n      'header.valuessrc',\n      'table'\n    );\n\n    // [[1, 2, 3], [4, 5, 6]]\n    expect(transposed.length).toBe(2);\n  });\n\n  it('removes extra array wrapping for special cases in tables', () => {\n    const transposed = maybeTransposeData([[1, 2, 3]], 'header.valuessrc', 'table');\n\n    // [1, 2, 3]\n    expect(Array.isArray(transposed[0])).toBe(false);\n    expect(transposed.length).toBe(3);\n  });\n});\n"],"mappings":"aAAA,IAAAA,MAAA,CAAAC,OAAA,aAA4C,IAAAC,aAAA,QAAAC,oBAAA,eAAAA,oBAAA,CAAAC,OAAA,CAAAC,SAAA,UAAAC,CAAA,SAAAA,CAAA,EAE5CC,QAAQ,CAAC,oBAAoB,CAAE,IAAM,CACnCC,EAAE,CAAC,6CAA6C,CAAE,IAAM,CACtD,KAAM,CAAAC,UAAU,CAAG,GAAAC,yBAAkB,EACnC,CACE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACT,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACV,CACD,MAAM,CACN,SACF,CAAC,CAGDC,MAAM,CAACF,UAAU,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAClC,CAAC,CAAC,CAEFL,EAAE,CAAC,6CAA6C,CAAE,IAAM,CACtD,KAAM,CAAAC,UAAU,CAAG,GAAAC,yBAAkB,EAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,MAAM,CAAE,SAAS,CAAC,CAGnEC,MAAM,CAACF,UAAU,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAClC,CAAC,CAAC,CAEFL,EAAE,CAAC,qDAAqD,CAAE,IAAM,CAC9D,KAAM,CAAAC,UAAU,CAAG,GAAAC,yBAAkB,EACnC,CACE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACT,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACV,CACD,kBAAkB,CAClB,OACF,CAAC,CAGDC,MAAM,CAACF,UAAU,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAClC,CAAC,CAAC,CAEFL,EAAE,CAAC,0DAA0D,CAAE,IAAM,CACnE,KAAM,CAAAC,UAAU,CAAG,GAAAC,yBAAkB,EAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,kBAAkB,CAAE,OAAO,CAAC,CAG/EC,MAAM,CAACG,KAAK,CAACC,OAAO,CAACN,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,KAAK,CAAC,CAChDF,MAAM,CAACF,UAAU,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAClC,CAAC,CACH,CAAC,CAAC","ignoreList":[]}