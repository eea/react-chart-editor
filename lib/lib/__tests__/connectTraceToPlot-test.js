"use strict";var _NumericInput=_interopRequireDefault(require("../../components/widgets/NumericInput"));var _react=_interopRequireDefault(require("react"));var _connectTraceToPlot=_interopRequireDefault(require("../connectTraceToPlot"));var _containers=require("../../components/containers");var _fields=require("../../components/fields");var _testUtils=require("../test-utils");var _enzyme=require("enzyme");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(function(){var enterModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.enterModule:undefined;enterModule&&enterModule(module)})();function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(e,r,t){return(r=_toPropertyKey(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _toPropertyKey(t){var i=_toPrimitive(t,"string");return"symbol"==typeof i?i:i+""}function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}var __signature__=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default.signature:function(a){return a};const Traces=[_containers.PlotlyPanel,_containers.PlotlyFold,_containers.PlotlySection].map(_connectTraceToPlot.default);const Editor=props=>_react.default.createElement(_testUtils.TestEditor,_objectSpread({plotly:_testUtils.plotly,onUpdate:jest.fn()},props));const defaultMarkerSize=6;Traces.forEach(Trace=>{describe("<".concat(Trace.displayName,">"),()=>{it("wraps container with fullValue pointing to gd._fullData[i]",()=>{const wrapper=(0,_enzyme.mount)(_react.default.createElement(Editor,_testUtils.fixtures.scatter(),_react.default.createElement(_containers.PlotlyPanel,null,_react.default.createElement(Trace,{traceIndexes:[0]},_react.default.createElement(_fields.Numeric,{label:"Marker Size",attr:"marker.size"}))))).find("[attr=\"marker.size\"]").find(_NumericInput.default);expect(wrapper.prop("value")).toBe(defaultMarkerSize)});it("sends updates to gd.data",()=>{const beforeUpdateTraces=jest.fn();const wrapper=(0,_enzyme.mount)(_react.default.createElement(Editor,_extends({beforeUpdateTraces:beforeUpdateTraces},_testUtils.fixtures.scatter()),_react.default.createElement(_containers.PlotlyPanel,null,_react.default.createElement(Trace,{traceIndexes:[0]},_react.default.createElement(_fields.Numeric,{label:"Marker Size",attr:"marker.size"}))))).find("[attr=\"marker.size\"]").find(_NumericInput.default);const sizeUpdate=200;wrapper.prop("onChange")(sizeUpdate);const payload=beforeUpdateTraces.mock.calls[0][0];expect(payload).toEqual({update:{"marker.size":sizeUpdate},traceIndexes:[0]})});it("automatically computes min and max defaults",()=>{const wrapper=(0,_enzyme.mount)(_react.default.createElement(Editor,_testUtils.fixtures.scatter(),_react.default.createElement(_containers.PlotlyPanel,null,_react.default.createElement(Trace,{traceIndexes:[0]},_react.default.createElement(_fields.Numeric,{label:"marker size",attr:"marker.size"}))))).find("[attr=\"marker.size\"]").find(_NumericInput.default);expect(wrapper.prop("min")).toBe(0);expect(wrapper.prop("max")).toBe(void 0)});it("has the correct name",()=>{const name="Voldemort";const wrapper=(0,_enzyme.mount)(_react.default.createElement(Editor,_testUtils.fixtures.scatter({data:[{name}]}),_react.default.createElement(_containers.PlotlyPanel,null,_react.default.createElement(Trace,{traceIndexes:[0]})))).find(Trace).childAt(0);expect(wrapper.props().name).toBe(name)})})});;(function(){var reactHotLoader=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default:undefined;if(!reactHotLoader){return}reactHotLoader.register(Traces,"Traces","/Users/razvan/Work/original-react-chart-editor/src/lib/__tests__/connectTraceToPlot-test.js");reactHotLoader.register(Editor,"Editor","/Users/razvan/Work/original-react-chart-editor/src/lib/__tests__/connectTraceToPlot-test.js");reactHotLoader.register(defaultMarkerSize,"defaultMarkerSize","/Users/razvan/Work/original-react-chart-editor/src/lib/__tests__/connectTraceToPlot-test.js")})();;(function(){var leaveModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.leaveModule:undefined;leaveModule&&leaveModule(module)})();
//# sourceMappingURL=connectTraceToPlot-test.js.map