{"version":3,"file":"transpose-test.js","names":["_index","require","__signature__","reactHotLoaderGlobal","default","signature","a","describe","it","originalArray","transposedArray","transpose","expect","length","toBe","forEach","subArray","Array","isArray"],"sources":["../../../src/lib/__tests__/transpose-test.js"],"sourcesContent":["import {transpose} from '../index';\n/* eslint-disable no-magic-numbers */\ndescribe('transpose', () => {\n  it('correctly transposes 1d arrays', () => {\n    const originalArray = [1, 2, 3];\n    const transposedArray = transpose(originalArray);\n\n    expect(transposedArray.length).toBe(3);\n\n    transposedArray.forEach((subArray) => {\n      expect(Array.isArray(subArray)).toBe(true);\n      expect(subArray.length).toBe(1);\n    });\n\n    expect(transposedArray[0][0]).toBe(1);\n    expect(transposedArray[1][0]).toBe(2);\n    expect(transposedArray[2][0]).toBe(3);\n  });\n\n  it('correctly transposes 2d arrays', () => {\n    const originalArray = [\n      [1, 2, 3],\n      [9, 8, 0],\n    ];\n    const transposedArray = transpose(originalArray);\n\n    expect(transposedArray.length).toBe(3);\n    transposedArray.forEach((subArray) => {\n      expect(Array.isArray(subArray)).toBe(true);\n      expect(subArray.length).toBe(2);\n    });\n\n    expect(transposedArray[0][0]).toBe(1);\n    expect(transposedArray[0][1]).toBe(9);\n    expect(transposedArray[1][0]).toBe(2);\n    expect(transposedArray[1][1]).toBe(8);\n    expect(transposedArray[2][0]).toBe(3);\n    expect(transposedArray[2][1]).toBe(0);\n  });\n\n  it('correctly fills non symmetrical 2d arrays', () => {\n    const originalArray = [\n      [1, 2],\n      [9, 8, 7],\n    ];\n    const transposedArray = transpose(originalArray);\n\n    expect(transposedArray.length).toBe(3);\n    transposedArray.forEach((subArray) => {\n      expect(Array.isArray(subArray)).toBe(true);\n      expect(subArray.length).toBe(2);\n    });\n\n    expect(transposedArray[0][0]).toBe(1);\n    expect(transposedArray[0][1]).toBe(9);\n    expect(transposedArray[1][0]).toBe(2);\n    expect(transposedArray[1][1]).toBe(8);\n    expect(transposedArray[2][0]).toBe(null);\n    expect(transposedArray[2][1]).toBe(7);\n  });\n});\n"],"mappings":"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","ignoreList":[]}