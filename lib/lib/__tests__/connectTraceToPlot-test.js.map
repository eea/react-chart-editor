{"version":3,"file":"connectTraceToPlot-test.js","names":["_NumericInput","_interopRequireDefault","require","_react","_connectTraceToPlot","_containers","_fields","_testUtils","_enzyme","e","__esModule","default","enterModule","reactHotLoaderGlobal","undefined","module","_extends","Object","assign","bind","n","arguments","length","t","r","hasOwnProperty","call","apply","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","__signature__","signature","a","Traces","PlotlyPanel","PlotlyFold","PlotlySection","map","connectTraceToPlot","Editor","props","createElement","TestEditor","plotly","onUpdate","jest","fn","defaultMarkerSize","Trace","describe","concat","displayName","it","wrapper","mount","fixtures","scatter","traceIndexes","Numeric","label","attr","find","NumericInput","expect","prop","toBe","beforeUpdateTraces","sizeUpdate","payload","mock","calls","toEqual","update","name","data","childAt","reactHotLoader","register","leaveModule"],"sources":["../../../src/lib/__tests__/connectTraceToPlot-test.js"],"sourcesContent":["import NumericInput from '../../components/widgets/NumericInput';\nimport React from 'react';\nimport connectTraceToPlot from '../connectTraceToPlot';\nimport {PlotlyFold, PlotlyPanel, PlotlySection} from '../../components/containers';\nimport {Numeric} from '../../components/fields';\nimport {TestEditor, fixtures, plotly} from '../test-utils';\nimport {mount} from 'enzyme';\n\nconst Traces = [PlotlyPanel, PlotlyFold, PlotlySection].map(connectTraceToPlot);\nconst Editor = (props) => <TestEditor {...{plotly, onUpdate: jest.fn(), ...props}} />;\n\nconst defaultMarkerSize = 6;\n\nTraces.forEach((Trace) => {\n  describe(`<${Trace.displayName}>`, () => {\n    it('wraps container with fullValue pointing to gd._fullData[i]', () => {\n      const wrapper = mount(\n        <Editor {...fixtures.scatter()}>\n          <PlotlyPanel>\n            <Trace traceIndexes={[0]}>\n              <Numeric label=\"Marker Size\" attr=\"marker.size\" />\n            </Trace>\n          </PlotlyPanel>\n        </Editor>\n      )\n        .find('[attr=\"marker.size\"]')\n        .find(NumericInput);\n\n      expect(wrapper.prop('value')).toBe(defaultMarkerSize);\n    });\n\n    it('sends updates to gd.data', () => {\n      const beforeUpdateTraces = jest.fn();\n      const wrapper = mount(\n        <Editor beforeUpdateTraces={beforeUpdateTraces} {...fixtures.scatter()}>\n          <PlotlyPanel>\n            <Trace traceIndexes={[0]}>\n              <Numeric label=\"Marker Size\" attr=\"marker.size\" />\n            </Trace>\n          </PlotlyPanel>\n        </Editor>\n      )\n        .find('[attr=\"marker.size\"]')\n        .find(NumericInput);\n\n      const sizeUpdate = 200;\n      wrapper.prop('onChange')(sizeUpdate);\n      const payload = beforeUpdateTraces.mock.calls[0][0];\n      expect(payload).toEqual({\n        update: {'marker.size': sizeUpdate},\n        traceIndexes: [0],\n      });\n    });\n\n    it('automatically computes min and max defaults', () => {\n      const wrapper = mount(\n        <Editor {...fixtures.scatter()}>\n          <PlotlyPanel>\n            <Trace traceIndexes={[0]}>\n              <Numeric label=\"marker size\" attr=\"marker.size\" />\n            </Trace>\n          </PlotlyPanel>\n        </Editor>\n      )\n        .find('[attr=\"marker.size\"]')\n        .find(NumericInput);\n\n      expect(wrapper.prop('min')).toBe(0);\n      expect(wrapper.prop('max')).toBe(void 0);\n    });\n\n    it('has the correct name', () => {\n      const name = 'Voldemort';\n      const wrapper = mount(\n        <Editor {...fixtures.scatter({data: [{name}]})}>\n          <PlotlyPanel>\n            <Trace traceIndexes={[0]} />\n          </PlotlyPanel>\n        </Editor>\n      )\n        .find(Trace)\n        .childAt(0);\n      expect(wrapper.props().name).toBe(name);\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}