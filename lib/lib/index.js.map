{"version":3,"file":"index.js","names":["_bem","_interopRequireDefault","require","_connectCartesianSubplotToLayout","_connectNonCartesianSubplotToLayout","_connectAnnotationToLayout","_connectShapeToLayout","_connectSliderToLayout","_connectImageToLayout","_connectUpdateMenuToLayout","_connectRangeSelectorToAxis","_connectLayersToMapbox","_connectTransformToTrace","_connectAggregationToTransform","_connectAxesToLayout","_connectLayoutToPlot","_connectToContainer","_interopRequireWildcard","_computeTraceOptionsFromSchema","_connectTraceToPlot","_dereference","_getAllAxes","_localize","_tinycolor","_unpackPlotProps","_walkObject","_customTraceType","PlotlyIcons","_striptags","_strings","_reactColorscales","_lib","constants","exports","_dataSources","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","enterModule","reactHotLoaderGlobal","undefined","module","__signature__","signature","TOO_LIGHT_FACTOR","clamp","value","min","max","Math","getDisplayName","WrappedComponent","displayName","name","tooLight","color","hslColor","tinyColor","toHsl","l","renderTraceIcon","trace","prefix","arguments","length","gl","componentName","concat","pascalCase","endsWith","slice","PlotLineIcon","transpose","originalArray","every","Array","isArray","map","longestArrayItem","forEach","newArray","outerIndex","innerIndex","push","specialTableCase","traceType","srcAttributePath","some","maybeTransposeData","data","isTransposable2DArray","includes","maybeAdjustSrc","src","config","fromSrc","adjustColorscale","colorscale","numberOfNeededColors","colorscaleType","repeat","repetitions","ceil","fill","reduce","b","getColorscale","getFullTrace","props","context","fullTrace","fullData","fullDataArrayPosition","filter","traceIndexes","index","transforms","type","_fullInput","getParsedTemplateString","originalString","text","templateString","reactHotLoader","register","leaveModule"],"sources":["../../src/lib/index.js"],"sourcesContent":["import bem from './bem';\nimport connectCartesianSubplotToLayout from './connectCartesianSubplotToLayout';\nimport connectNonCartesianSubplotToLayout from './connectNonCartesianSubplotToLayout';\nimport connectAnnotationToLayout from './connectAnnotationToLayout';\nimport connectShapeToLayout from './connectShapeToLayout';\nimport connectSliderToLayout from './connectSliderToLayout';\nimport connectImageToLayout from './connectImageToLayout';\nimport connectUpdateMenuToLayout from './connectUpdateMenuToLayout';\nimport connectRangeSelectorToAxis from './connectRangeSelectorToAxis';\nimport connectLayersToMapbox from './connectLayersToMapbox';\nimport connectTransformToTrace from './connectTransformToTrace';\nimport connectAggregationToTransform from './connectAggregationToTransform';\nimport connectAxesToLayout from './connectAxesToLayout';\nimport connectLayoutToPlot from './connectLayoutToPlot';\nimport connectToContainer, {containerConnectedContextTypes} from './connectToContainer';\nimport {computeTraceOptionsFromSchema} from './computeTraceOptionsFromSchema';\nimport connectTraceToPlot from './connectTraceToPlot';\nimport dereference, {getColumnNames} from './dereference';\nimport getAllAxes, {\n  axisIdToAxisName,\n  traceTypeToAxisType,\n  getAxisTitle,\n  getSubplotTitle,\n} from './getAllAxes';\nimport localize, {localizeString} from './localize';\nimport tinyColor from 'tinycolor2';\nimport unpackPlotProps, {\n  computeCustomConfigVisibility,\n  hasValidCustomConfigVisibilityRules,\n  isVisibleGivenCustomConfig,\n} from './unpackPlotProps';\nimport walkObject, {isPlainObject} from './walkObject';\nimport {traceTypeToPlotlyInitFigure, plotlyTraceToCustomTrace} from './customTraceType';\nimport * as PlotlyIcons from 'plotly-icons';\nimport striptags from './striptags';\nimport {capitalize, lowerCase, upperCase, removeNonWord, camelCase, pascalCase} from './strings';\nimport {getColorscale} from 'react-colorscales';\nimport {templateString} from 'plotly.js/src/lib';\nimport * as constants from './constants';\nimport {getAdjustedSrcAttr, getAttrsPath, getSrcAttr, getData, inSrcAttr} from './dataSources';\n\nconst TOO_LIGHT_FACTOR = 0.8;\n\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nfunction tooLight(color) {\n  const hslColor = tinyColor(color).toHsl();\n  return hslColor.l > TOO_LIGHT_FACTOR;\n}\n\nfunction renderTraceIcon(trace, prefix = 'Plot') {\n  if (!trace) {\n    return null;\n  }\n  const gl = 'gl';\n  const componentName = `${prefix}${pascalCase(\n    trace.endsWith(gl) ? trace.slice(0, -gl.length) : trace\n  )}Icon`;\n\n  return PlotlyIcons[componentName] ? PlotlyIcons[componentName] : PlotlyIcons.PlotLineIcon;\n}\n\nfunction transpose(originalArray) {\n  // if we want to transpose a uni dimensional array\n  if (originalArray.every((a) => !Array.isArray(a))) {\n    return originalArray.map((a) => [a]);\n  }\n\n  let longestArrayItem = Array.isArray(originalArray[0]) ? originalArray[0].length : 1;\n\n  originalArray.forEach((a) => {\n    // if it's not an array, it's a string\n    const length = Array.isArray(a) ? a.length : 1;\n    if (length > longestArrayItem) {\n      longestArrayItem = length;\n    }\n  });\n\n  const newArray = new Array(longestArrayItem);\n\n  for (let outerIndex = 0; outerIndex < originalArray.length; outerIndex++) {\n    if (!Array.isArray(originalArray[outerIndex])) {\n      originalArray[outerIndex] = [originalArray[outerIndex]];\n    }\n\n    for (let innerIndex = 0; innerIndex < longestArrayItem; innerIndex++) {\n      // ensure we have an array to push to\n      if (!Array.isArray(newArray[innerIndex])) {\n        newArray[innerIndex] = [];\n      }\n\n      const value =\n        typeof originalArray[outerIndex][innerIndex] !== 'undefined'\n          ? originalArray[outerIndex][innerIndex]\n          : null;\n      newArray[innerIndex].push(value);\n    }\n  }\n\n  return newArray;\n}\n\nconst specialTableCase = (traceType, srcAttributePath) => {\n  /* Just more user friendly\n   * Table traces have many configuration options,\n   * The below attributes can be 2d or 1d and will affect the plot differently\n   * EX:\n   * header.values = ['Jan', 'Feb', 'Mar'] => will put data in a row\n   * header.values = [['Jan', 1], ['Feb', 2], ['Mar', 3]] => will create 3 columns\n   * 1d arrays affect columns\n   * 2d arrays affect rows within each column\n   */\n  return (\n    traceType === 'table' &&\n    [\n      'header.valuessrc',\n      'header.font.colorsrc',\n      'header.font.sizesrc',\n      'header.fill.colorsrc',\n      'columnwidthsrc',\n    ].some((a) => srcAttributePath.endsWith(a))\n  );\n};\n\nfunction maybeTransposeData(data, srcAttributePath, traceType) {\n  if (!data || (Array.isArray(data) && data.length === 0)) {\n    return null;\n  }\n\n  const isTransposable2DArray =\n    srcAttributePath.endsWith('zsrc') &&\n    ['contour', 'contourgl', 'heatmap', 'heatmapgl', 'surface', 'carpet', 'contourcarpet'].includes(\n      traceType\n    );\n\n  if (isTransposable2DArray) {\n    return transpose(data);\n  }\n\n  if (\n    specialTableCase(traceType, srcAttributePath) &&\n    Array.isArray(data[0]) &&\n    data.length === 1\n  ) {\n    return data[0];\n  }\n\n  return data;\n}\n\nfunction maybeAdjustSrc(src, srcAttributePath, traceType, config) {\n  if (!src || (Array.isArray(src) && src.length === 0)) {\n    return null;\n  }\n\n  if (specialTableCase(traceType, srcAttributePath) && src.length === 1) {\n    return src[0];\n  }\n\n  return config && config.fromSrc ? config.fromSrc(src, traceType, srcAttributePath) : src;\n}\n\nfunction adjustColorscale(colorscale, numberOfNeededColors, colorscaleType, config) {\n  if (config && config.repeat) {\n    if (numberOfNeededColors < colorscale.length) {\n      return colorscale.slice(0, numberOfNeededColors);\n    }\n\n    const repetitions = Math.ceil(numberOfNeededColors / colorscale.length);\n    const newArray = new Array(repetitions).fill(colorscale);\n    return newArray\n      .reduce((a, b) => {\n        return a.concat(b);\n      }, [])\n      .slice(0, numberOfNeededColors);\n  }\n\n  return getColorscale(colorscale, numberOfNeededColors, null, null, colorscaleType);\n}\n\nfunction getFullTrace(props, context) {\n  let fullTrace = {};\n  if (context.fullData && context.data) {\n    if (props.fullDataArrayPosition) {\n      // fullDataArrayPosition will be supplied in panels that have the canGroup prop\n      fullTrace = context.fullData[props.fullDataArrayPosition[0]];\n    } else {\n      // for all other panels, we'll find fullTrace with the data index\n      fullTrace = context.fullData.filter((t) => t && props.traceIndexes[0] === t.index)[0];\n    }\n\n    // For transformed traces, we actually want to read in _fullInput because\n    // there's original parent information that's more useful to the user there\n    // This is true except for fit transforms, where reading in fullData is\n    // what we want\n    if (\n      fullTrace &&\n      fullTrace.transforms &&\n      !fullTrace.transforms.some((t) => ['moving-average', 'fits'].includes(t.type)) &&\n      !props.fullDataArrayPosition\n    ) {\n      fullTrace = fullTrace._fullInput;\n    }\n  }\n  return fullTrace;\n}\n\nfunction getParsedTemplateString(originalString, context) {\n  let text = originalString;\n\n  if (originalString && context) {\n    text = templateString(originalString, context);\n  }\n\n  return text === '' && originalString ? originalString : text;\n}\n\nexport {\n  adjustColorscale,\n  computeCustomConfigVisibility,\n  axisIdToAxisName,\n  bem,\n  camelCase,\n  capitalize,\n  clamp,\n  computeTraceOptionsFromSchema,\n  connectAggregationToTransform,\n  connectAnnotationToLayout,\n  connectAxesToLayout,\n  connectCartesianSubplotToLayout,\n  connectImageToLayout,\n  connectLayoutToPlot,\n  connectNonCartesianSubplotToLayout,\n  connectRangeSelectorToAxis,\n  connectLayersToMapbox,\n  connectShapeToLayout,\n  connectSliderToLayout,\n  connectToContainer,\n  connectTraceToPlot,\n  connectTransformToTrace,\n  connectUpdateMenuToLayout,\n  containerConnectedContextTypes,\n  constants,\n  dereference,\n  getAdjustedSrcAttr,\n  getAllAxes,\n  getAttrsPath,\n  getColumnNames,\n  getData,\n  getSrcAttr,\n  getAxisTitle,\n  getDisplayName,\n  getFullTrace,\n  getSubplotTitle,\n  inSrcAttr,\n  isPlainObject,\n  hasValidCustomConfigVisibilityRules,\n  localize,\n  localizeString,\n  lowerCase,\n  maybeAdjustSrc,\n  maybeTransposeData,\n  getParsedTemplateString,\n  pascalCase,\n  plotlyTraceToCustomTrace,\n  removeNonWord,\n  renderTraceIcon,\n  striptags,\n  tooLight,\n  traceTypeToAxisType,\n  traceTypeToPlotlyInitFigure,\n  transpose,\n  unpackPlotProps,\n  upperCase,\n  isVisibleGivenCustomConfig,\n  walkObject,\n};\n"],"mappings":"2xMAAA,IAAAA,IAAA,CAAAC,sBAAA,CAAAC,OAAA,WACA,IAAAC,gCAAA,CAAAF,sBAAA,CAAAC,OAAA,uCACA,IAAAE,mCAAA,CAAAH,sBAAA,CAAAC,OAAA,0CACA,IAAAG,0BAAA,CAAAJ,sBAAA,CAAAC,OAAA,iCACA,IAAAI,qBAAA,CAAAL,sBAAA,CAAAC,OAAA,4BACA,IAAAK,sBAAA,CAAAN,sBAAA,CAAAC,OAAA,6BACA,IAAAM,qBAAA,CAAAP,sBAAA,CAAAC,OAAA,4BACA,IAAAO,0BAAA,CAAAR,sBAAA,CAAAC,OAAA,iCACA,IAAAQ,2BAAA,CAAAT,sBAAA,CAAAC,OAAA,kCACA,IAAAS,sBAAA,CAAAV,sBAAA,CAAAC,OAAA,6BACA,IAAAU,wBAAA,CAAAX,sBAAA,CAAAC,OAAA,+BACA,IAAAW,8BAAA,CAAAZ,sBAAA,CAAAC,OAAA,qCACA,IAAAY,oBAAA,CAAAb,sBAAA,CAAAC,OAAA,2BACA,IAAAa,oBAAA,CAAAd,sBAAA,CAAAC,OAAA,2BACA,IAAAc,mBAAA,CAAAC,uBAAA,CAAAf,OAAA,0BACA,IAAAgB,8BAAA,CAAAhB,OAAA,oCACA,IAAAiB,mBAAA,CAAAlB,sBAAA,CAAAC,OAAA,0BACA,IAAAkB,YAAA,CAAAH,uBAAA,CAAAf,OAAA,mBACA,IAAAmB,WAAA,CAAAJ,uBAAA,CAAAf,OAAA,kBAMA,IAAAoB,SAAA,CAAAL,uBAAA,CAAAf,OAAA,gBACA,IAAAqB,UAAA,CAAAtB,sBAAA,CAAAC,OAAA,gBACA,IAAAsB,gBAAA,CAAAP,uBAAA,CAAAf,OAAA,uBAKA,IAAAuB,WAAA,CAAAR,uBAAA,CAAAf,OAAA,kBACA,IAAAwB,gBAAA,CAAAxB,OAAA,sBACA,IAAAyB,WAAA,CAAAV,uBAAA,CAAAf,OAAA,kBACA,IAAA0B,UAAA,CAAA3B,sBAAA,CAAAC,OAAA,iBACA,IAAA2B,QAAA,CAAA3B,OAAA,cACA,IAAA4B,iBAAA,CAAA5B,OAAA,sBACA,IAAA6B,IAAA,CAAA7B,OAAA,sBACA,IAAA8B,SAAA,CAAAf,uBAAA,CAAAf,OAAA,iBAAyC+B,OAAA,CAAAD,SAAA,CAAAA,SAAA,CACzC,IAAAE,YAAA,CAAAhC,OAAA,kBAA+F,SAAAiC,yBAAAC,CAAA,wBAAAC,OAAA,iBAAAC,CAAA,KAAAD,OAAA,CAAAE,CAAA,KAAAF,OAAA,QAAAF,wBAAA,UAAAA,yBAAAC,CAAA,SAAAA,CAAA,CAAAG,CAAA,CAAAD,CAAA,GAAAF,CAAA,WAAAnB,wBAAAmB,CAAA,CAAAE,CAAA,MAAAA,CAAA,EAAAF,CAAA,EAAAA,CAAA,CAAAI,UAAA,QAAAJ,CAAA,WAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAK,OAAA,CAAAL,CAAA,MAAAG,CAAA,CAAAJ,wBAAA,CAAAG,CAAA,KAAAC,CAAA,EAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,SAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,MAAAQ,CAAA,EAAAC,SAAA,OAAAC,CAAA,CAAAC,MAAA,CAAAC,cAAA,EAAAD,MAAA,CAAAE,wBAAA,SAAAC,CAAA,IAAAd,CAAA,gBAAAc,CAAA,KAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,CAAAc,CAAA,OAAAG,CAAA,CAAAP,CAAA,CAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,CAAAc,CAAA,OAAAG,CAAA,GAAAA,CAAA,CAAAV,GAAA,EAAAU,CAAA,CAAAC,GAAA,EAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,CAAAM,CAAA,CAAAG,CAAA,EAAAT,CAAA,CAAAM,CAAA,EAAAd,CAAA,CAAAc,CAAA,SAAAN,CAAA,CAAAH,OAAA,CAAAL,CAAA,CAAAG,CAAA,EAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,CAAAQ,CAAA,EAAAA,CAAA,UAAA3C,uBAAAmC,CAAA,SAAAA,CAAA,EAAAA,CAAA,CAAAI,UAAA,CAAAJ,CAAA,EAAAK,OAAA,CAAAL,CAAA,kBAAAmB,WAAA,QAAAC,oBAAA,eAAAA,oBAAA,CAAAD,WAAA,CAAAE,SAAA,CAAAF,WAAA,EAAAA,WAAA,CAAAG,MAAA,UAAAC,aAAA,QAAAH,oBAAA,eAAAA,oBAAA,CAAAf,OAAA,CAAAmB,SAAA,UAAAd,CAAA,SAAAA,CAAA,EAE/F,KAAM,CAAAe,gBAAgB,CAAG,GAAG,CAE5B,QAAS,CAAAC,KAAKA,CAACC,KAAK,CAAEC,GAAG,CAAEC,GAAG,CAAE,CAC9B,MAAO,CAAAC,IAAI,CAACD,GAAG,CAACD,GAAG,CAAEE,IAAI,CAACF,GAAG,CAACC,GAAG,CAAEF,KAAK,CAAC,CAC3C,CAEA,QAAS,CAAAI,cAAcA,CAACC,gBAAgB,CAAE,CACxC,MAAO,CAAAA,gBAAgB,CAACC,WAAW,EAAID,gBAAgB,CAACE,IAAI,EAAI,WAClE,CAEA,QAAS,CAAAC,QAAQA,CAACC,KAAK,CAAE,CACvB,KAAM,CAAAC,QAAQ,CAAG,GAAAC,kBAAS,EAACF,KAAK,CAAC,CAACG,KAAK,CAAC,CAAC,CACzC,MAAO,CAAAF,QAAQ,CAACG,CAAC,CAAGf,gBACtB,CAEA,QAAS,CAAAgB,eAAeA,CAACC,KAAK,CAAmB,IAAjB,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAvB,SAAA,CAAAuB,SAAA,IAAG,MAAM,CAC7C,GAAI,CAACF,KAAK,CAAE,CACV,MAAO,KACT,CACA,KAAM,CAAAI,EAAE,CAAG,IAAI,CACf,KAAM,CAAAC,aAAa,IAAAC,MAAA,CAAML,MAAM,EAAAK,MAAA,CAAG,GAAAC,mBAAU,EAC1CP,KAAK,CAACQ,QAAQ,CAACJ,EAAE,CAAC,CAAGJ,KAAK,CAACS,KAAK,CAAC,CAAC,CAAE,CAACL,EAAE,CAACD,MAAM,CAAC,CAAGH,KACpD,CAAC,QAAM,CAEP,MAAO,CAAAnD,WAAW,CAACwD,aAAa,CAAC,CAAGxD,WAAW,CAACwD,aAAa,CAAC,CAAGxD,WAAW,CAAC6D,YAC/E,CAEA,QAAS,CAAAC,SAASA,CAACC,aAAa,CAAE,CAEhC,GAAIA,aAAa,CAACC,KAAK,CAAE7C,CAAC,EAAK,CAAC8C,KAAK,CAACC,OAAO,CAAC/C,CAAC,CAAC,CAAC,CAAE,CACjD,MAAO,CAAA4C,aAAa,CAACI,GAAG,CAAEhD,CAAC,EAAK,CAACA,CAAC,CAAC,CACrC,CAEA,GAAI,CAAAiD,gBAAgB,CAAGH,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,CAAC,CAAC,CAAC,CAAGA,aAAa,CAAC,CAAC,CAAC,CAACT,MAAM,CAAG,CAAC,CAEpFS,aAAa,CAACM,OAAO,CAAElD,CAAC,EAAK,CAE3B,KAAM,CAAAmC,MAAM,CAAGW,KAAK,CAACC,OAAO,CAAC/C,CAAC,CAAC,CAAGA,CAAC,CAACmC,MAAM,CAAG,CAAC,CAC9C,GAAIA,MAAM,CAAGc,gBAAgB,CAAE,CAC7BA,gBAAgB,CAAGd,MACrB,CACF,CAAC,CAAC,CAEF,KAAM,CAAAgB,QAAQ,CAAG,GAAI,CAAAL,KAAK,CAACG,gBAAgB,CAAC,CAE5C,IAAK,GAAI,CAAAG,UAAU,CAAG,CAAC,CAAEA,UAAU,CAAGR,aAAa,CAACT,MAAM,CAAEiB,UAAU,EAAE,CAAE,CACxE,GAAI,CAACN,KAAK,CAACC,OAAO,CAACH,aAAa,CAACQ,UAAU,CAAC,CAAC,CAAE,CAC7CR,aAAa,CAACQ,UAAU,CAAC,CAAG,CAACR,aAAa,CAACQ,UAAU,CAAC,CACxD,CAEA,IAAK,GAAI,CAAAC,UAAU,CAAG,CAAC,CAAEA,UAAU,CAAGJ,gBAAgB,CAAEI,UAAU,EAAE,CAAE,CAEpE,GAAI,CAACP,KAAK,CAACC,OAAO,CAACI,QAAQ,CAACE,UAAU,CAAC,CAAC,CAAE,CACxCF,QAAQ,CAACE,UAAU,CAAC,CAAG,EACzB,CAEA,KAAM,CAAApC,KAAK,CACT,MAAO,CAAA2B,aAAa,CAACQ,UAAU,CAAC,CAACC,UAAU,CAAC,GAAK,WAAW,CACxDT,aAAa,CAACQ,UAAU,CAAC,CAACC,UAAU,CAAC,CACrC,IAAI,CACVF,QAAQ,CAACE,UAAU,CAAC,CAACC,IAAI,CAACrC,KAAK,CACjC,CACF,CAEA,MAAO,CAAAkC,QACT,CAEA,KAAM,CAAAI,gBAAgB,CAAGA,CAACC,SAAS,CAAEC,gBAAgB,GAAK,CAUxD,MACE,CAAAD,SAAS,GAAK,OAAO,EACrB,CACE,kBAAkB,CAClB,sBAAsB,CACtB,qBAAqB,CACrB,sBAAsB,CACtB,gBAAgB,CACjB,CAACE,IAAI,CAAE1D,CAAC,EAAKyD,gBAAgB,CAACjB,QAAQ,CAACxC,CAAC,CAAC,CAE9C,CAAC,CAED,QAAS,CAAA2D,kBAAkBA,CAACC,IAAI,CAAEH,gBAAgB,CAAED,SAAS,CAAE,CAC7D,GAAI,CAACI,IAAI,EAAKd,KAAK,CAACC,OAAO,CAACa,IAAI,CAAC,EAAIA,IAAI,CAACzB,MAAM,GAAK,CAAE,CAAE,CACvD,MAAO,KACT,CAEA,KAAM,CAAA0B,qBAAqB,CACzBJ,gBAAgB,CAACjB,QAAQ,CAAC,MAAM,CAAC,EACjC,CAAC,SAAS,CAAE,WAAW,CAAE,SAAS,CAAE,WAAW,CAAE,SAAS,CAAE,QAAQ,CAAE,eAAe,CAAC,CAACsB,QAAQ,CAC7FN,SACF,CAAC,CAEH,GAAIK,qBAAqB,CAAE,CACzB,MAAO,CAAAlB,SAAS,CAACiB,IAAI,CACvB,CAEA,GACEL,gBAAgB,CAACC,SAAS,CAAEC,gBAAgB,CAAC,EAC7CX,KAAK,CAACC,OAAO,CAACa,IAAI,CAAC,CAAC,CAAC,CAAC,EACtBA,IAAI,CAACzB,MAAM,GAAK,CAAC,CACjB,CACA,MAAO,CAAAyB,IAAI,CAAC,CAAC,CACf,CAEA,MAAO,CAAAA,IACT,CAEA,QAAS,CAAAG,cAAcA,CAACC,GAAG,CAAEP,gBAAgB,CAAED,SAAS,CAAES,MAAM,CAAE,CAChE,GAAI,CAACD,GAAG,EAAKlB,KAAK,CAACC,OAAO,CAACiB,GAAG,CAAC,EAAIA,GAAG,CAAC7B,MAAM,GAAK,CAAE,CAAE,CACpD,MAAO,KACT,CAEA,GAAIoB,gBAAgB,CAACC,SAAS,CAAEC,gBAAgB,CAAC,EAAIO,GAAG,CAAC7B,MAAM,GAAK,CAAC,CAAE,CACrE,MAAO,CAAA6B,GAAG,CAAC,CAAC,CACd,CAEA,MAAO,CAAAC,MAAM,EAAIA,MAAM,CAACC,OAAO,CAAGD,MAAM,CAACC,OAAO,CAACF,GAAG,CAAER,SAAS,CAAEC,gBAAgB,CAAC,CAAGO,GACvF,CAEA,QAAS,CAAAG,gBAAgBA,CAACC,UAAU,CAAEC,oBAAoB,CAAEC,cAAc,CAAEL,MAAM,CAAE,CAClF,GAAIA,MAAM,EAAIA,MAAM,CAACM,MAAM,CAAE,CAC3B,GAAIF,oBAAoB,CAAGD,UAAU,CAACjC,MAAM,CAAE,CAC5C,MAAO,CAAAiC,UAAU,CAAC3B,KAAK,CAAC,CAAC,CAAE4B,oBAAoB,CACjD,CAEA,KAAM,CAAAG,WAAW,CAAGpD,IAAI,CAACqD,IAAI,CAACJ,oBAAoB,CAAGD,UAAU,CAACjC,MAAM,CAAC,CACvE,KAAM,CAAAgB,QAAQ,CAAG,GAAI,CAAAL,KAAK,CAAC0B,WAAW,CAAC,CAACE,IAAI,CAACN,UAAU,CAAC,CACxD,MAAO,CAAAjB,QAAQ,CACZwB,MAAM,CAAC,CAAC3E,CAAC,CAAE4E,CAAC,GAAK,CAChB,MAAO,CAAA5E,CAAC,CAACsC,MAAM,CAACsC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CACLnC,KAAK,CAAC,CAAC,CAAE4B,oBAAoB,CAClC,CAEA,MAAO,GAAAQ,+BAAa,EAACT,UAAU,CAAEC,oBAAoB,CAAE,IAAI,CAAE,IAAI,CAAEC,cAAc,CACnF,CAEA,QAAS,CAAAQ,YAAYA,CAACC,KAAK,CAAEC,OAAO,CAAE,CACpC,GAAI,CAAAC,SAAS,CAAG,CAAC,CAAC,CAClB,GAAID,OAAO,CAACE,QAAQ,EAAIF,OAAO,CAACpB,IAAI,CAAE,CACpC,GAAImB,KAAK,CAACI,qBAAqB,CAAE,CAE/BF,SAAS,CAAGD,OAAO,CAACE,QAAQ,CAACH,KAAK,CAACI,qBAAqB,CAAC,CAAC,CAAC,CAC7D,CAAC,IAAM,CAELF,SAAS,CAAGD,OAAO,CAACE,QAAQ,CAACE,MAAM,CAAE3F,CAAC,EAAKA,CAAC,EAAIsF,KAAK,CAACM,YAAY,CAAC,CAAC,CAAC,GAAK5F,CAAC,CAAC6F,KAAK,CAAC,CAAC,CAAC,CACtF,CAMA,GACEL,SAAS,EACTA,SAAS,CAACM,UAAU,EACpB,CAACN,SAAS,CAACM,UAAU,CAAC7B,IAAI,CAAEjE,CAAC,EAAK,CAAC,gBAAgB,CAAE,MAAM,CAAC,CAACqE,QAAQ,CAACrE,CAAC,CAAC+F,IAAI,CAAC,CAAC,EAC9E,CAACT,KAAK,CAACI,qBAAqB,CAC5B,CACAF,SAAS,CAAGA,SAAS,CAACQ,UACxB,CACF,CACA,MAAO,CAAAR,SACT,CAEA,QAAS,CAAAS,uBAAuBA,CAACC,cAAc,CAAEX,OAAO,CAAE,CACxD,GAAI,CAAAY,IAAI,CAAGD,cAAc,CAEzB,GAAIA,cAAc,EAAIX,OAAO,CAAE,CAC7BY,IAAI,CAAG,GAAAC,mBAAc,EAACF,cAAc,CAAEX,OAAO,CAC/C,CAEA,MAAO,CAAAY,IAAI,GAAK,EAAE,EAAID,cAAc,CAAGA,cAAc,CAAGC,IAC1D,CAAC,iBAAAE,cAAA,QAAApF,oBAAA,eAAAA,oBAAA,CAAAf,OAAA,CAAAgB,SAAA,KAAAmF,cAAA,SAAAA,cAAA,CAAAC,QAAA,CApLKhF,gBAAgB,8EAAA+E,cAAA,CAAAC,QAAA,CAEb/E,KAAK,mEAAA8E,cAAA,CAAAC,QAAA,CAIL1E,cAAc,4EAAAyE,cAAA,CAAAC,QAAA,CAIdtE,QAAQ,sEAAAqE,cAAA,CAAAC,QAAA,CAKRhE,eAAe,6EAAA+D,cAAA,CAAAC,QAAA,CAYfpD,SAAS,uEAAAmD,cAAA,CAAAC,QAAA,CAwCZxC,gBAAgB,8EAAAuC,cAAA,CAAAC,QAAA,CAsBbpC,kBAAkB,gFAAAmC,cAAA,CAAAC,QAAA,CA0BlBhC,cAAc,4EAAA+B,cAAA,CAAAC,QAAA,CAYd5B,gBAAgB,8EAAA2B,cAAA,CAAAC,QAAA,CAkBhBjB,YAAY,0EAAAgB,cAAA,CAAAC,QAAA,CA2BZL,uBAAuB,0GAAAM,WAAA,QAAAtF,oBAAA,eAAAA,oBAAA,CAAAsF,WAAA,CAAArF,SAAA,CAAAqF,WAAA,EAAAA,WAAA,CAAApF,MAAA","ignoreList":[]}