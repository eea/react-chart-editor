"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=connectTraceToPlot;var _react=_interopRequireWildcard(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _nested_property=_interopRequireDefault(require("plotly.js/src/lib/nested_property"));var _lib=require("../lib");var _multiValues=require("./multiValues");var _constants=require("./constants");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(function(){var enterModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.enterModule:undefined;enterModule&&enterModule(module)})();function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var __signature__=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default.signature:function(a){return a};function connectTraceToPlot(WrappedComponent){class TraceConnectedComponent extends _react.Component{constructor(props,context){super(props,context);this.deleteTrace=this.deleteTrace.bind(this);this.updateTrace=this.updateTrace.bind(this);this.moveTrace=this.moveTrace.bind(this);this.setLocals(props,context)}UNSAFE_componentWillReceiveProps(nextProps,nextContext){this.setLocals(nextProps,nextContext)}setLocals(props,context){var{traceIndexes}=props;var{data,fullData,plotly}=context;var trace=data[traceIndexes[0]];var fullTrace=(0,_lib.getFullTrace)(props,context);this.childContext={getValObject:attr=>!plotly?null:plotly.PlotSchema.getTraceValObject(fullTrace,(0,_nested_property.default)({},attr).parts),updateContainer:this.updateTrace,deleteContainer:this.deleteTrace,moveContainer:this.moveTrace,container:trace,fullContainer:fullTrace,traceIndexes:this.props.traceIndexes};if(traceIndexes.length>1){var multiValuedFullContainer=(0,_multiValues.deepCopyPublic)(fullTrace);fullData.forEach(t=>Object.keys(t).forEach(key=>(0,_multiValues.setMultiValuedContainer)(multiValuedFullContainer,(0,_multiValues.deepCopyPublic)(t),key,{searchArrays:true})));var multiValuedContainer=(0,_multiValues.deepCopyPublic)(trace);data.forEach(t=>Object.keys(t).forEach(key=>(0,_multiValues.setMultiValuedContainer)(multiValuedContainer,(0,_multiValues.deepCopyPublic)(t),key,{searchArrays:true})));this.childContext.fullContainer=multiValuedFullContainer;this.childContext.defaultContainer=fullTrace;this.childContext.container=multiValuedContainer}if(trace&&fullTrace){this.icon=(0,_lib.renderTraceIcon)((0,_lib.plotlyTraceToCustomTrace)(trace));this.name=(0,_lib.getParsedTemplateString)(fullTrace.name,{meta:fullTrace.meta})}}getChildContext(){return this.childContext}updateTrace(update){if(this.context.onUpdate){var splitTraceGroup=this.props.fullDataArrayPosition?this.props.fullDataArrayPosition.map(p=>this.context.fullData[p]._group):null;var containsAnSrc=Object.keys(update).filter(a=>a.endsWith("src")).length>0;if(Array.isArray(update)){update.forEach((u,i)=>{this.context.onUpdate({type:_constants.EDITOR_ACTIONS.UPDATE_TRACES,payload:{update:u,traceIndexes:[this.props.traceIndexes[i]],splitTraceGroup:splitTraceGroup?splitTraceGroup[i]:null}})})}else if(splitTraceGroup&&!containsAnSrc){this.props.traceIndexes.forEach((t,i)=>{this.context.onUpdate({type:_constants.EDITOR_ACTIONS.UPDATE_TRACES,payload:{update,traceIndexes:[this.props.traceIndexes[i]],splitTraceGroup:splitTraceGroup?splitTraceGroup[i]:null}})})}else{this.context.onUpdate({type:_constants.EDITOR_ACTIONS.UPDATE_TRACES,payload:{update,traceIndexes:this.props.traceIndexes}})}}}deleteTrace(){var currentTrace=this.context.fullData[this.props.traceIndexes[0]];if(!currentTrace&&this.context.onUpdate){this.context.onUpdate({type:_constants.EDITOR_ACTIONS.DELETE_TRACE,payload:{traceIndexes:this.props.traceIndexes}});return}var axesToBeGarbageCollected=[];var subplotToBeGarbageCollected=null;var subplotType=(0,_lib.traceTypeToAxisType)(currentTrace.type);if(subplotType){var subplotNames=subplotType==="cartesian"?[currentTrace.xaxis||"xaxis",currentTrace.yaxis||"yaxis"]:currentTrace[_constants.SUBPLOT_TO_ATTR[subplotType].data]||_constants.SUBPLOT_TO_ATTR[subplotType].data;var isSubplotUsedAnywhereElse=(subplotType,subplotName)=>this.context.fullData.some(trace=>(trace[_constants.SUBPLOT_TO_ATTR[subplotType].data]===subplotName||((subplotType==="xaxis"||subplotType==="yaxis")&&subplotName.charAt(1))===""||subplotName.split(subplotType)[1]===""&&trace[_constants.SUBPLOT_TO_ATTR[subplotType].data]===null)&&trace.index!==this.props.traceIndexes[0]);if(subplotType==="cartesian"){if(!isSubplotUsedAnywhereElse("xaxis",subplotNames[0])){axesToBeGarbageCollected.push(subplotNames[0])}if(!isSubplotUsedAnywhereElse("yaxis",subplotNames[1])){axesToBeGarbageCollected.push(subplotNames[1])}}else{if(!isSubplotUsedAnywhereElse(subplotType,subplotNames)){subplotToBeGarbageCollected=subplotNames}}}if(this.context.onUpdate){this.context.onUpdate({type:_constants.EDITOR_ACTIONS.DELETE_TRACE,payload:{axesToBeGarbageCollected,subplotToBeGarbageCollected,traceIndexes:this.props.traceIndexes}})}}moveTrace(direction){var traceIndex=this.props.traceIndexes[0];var desiredIndex=direction==="up"?traceIndex-1:traceIndex+1;this.context.onUpdate({type:_constants.EDITOR_ACTIONS.MOVE_TO,payload:{fromIndex:traceIndex,toIndex:desiredIndex,path:"data"}})}render(){return _react.default.createElement(WrappedComponent,_extends({name:this.name,icon:this.icon},this.props))}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}TraceConnectedComponent.displayName="TraceConnected".concat((0,_lib.getDisplayName)(WrappedComponent));TraceConnectedComponent.propTypes={traceIndexes:_propTypes.default.arrayOf(_propTypes.default.number).isRequired,fullDataArrayPosition:_propTypes.default.arrayOf(_propTypes.default.number)};TraceConnectedComponent.contextTypes={fullData:_propTypes.default.array,data:_propTypes.default.array,plotly:_propTypes.default.object,onUpdate:_propTypes.default.func,layout:_propTypes.default.object};TraceConnectedComponent.childContextTypes={getValObject:_propTypes.default.func,updateContainer:_propTypes.default.func,deleteContainer:_propTypes.default.func,defaultContainer:_propTypes.default.object,container:_propTypes.default.object,fullContainer:_propTypes.default.object,traceIndexes:_propTypes.default.array,moveContainer:_propTypes.default.func};var{plotly_editor_traits}=WrappedComponent;TraceConnectedComponent.plotly_editor_traits=plotly_editor_traits;return TraceConnectedComponent};(function(){var reactHotLoader=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.default:undefined;if(!reactHotLoader){return}reactHotLoader.register(connectTraceToPlot,"connectTraceToPlot","/Users/razvan/Work/react-chart-editor/src/lib/connectTraceToPlot.js")})();;(function(){var leaveModule=typeof reactHotLoaderGlobal!=="undefined"?reactHotLoaderGlobal.leaveModule:undefined;leaveModule&&leaveModule(module)})();
//# sourceMappingURL=connectTraceToPlot.js.map